<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Code4Fun</title>
  
  <subtitle>I love the world!</subtitle>
  <link href="http://code4fun.me/atom.xml" rel="self"/>
  
  <link href="http://code4fun.me/"/>
  <updated>2025-06-13T10:54:27.290Z</updated>
  <id>http://code4fun.me/</id>
  
  <author>
    <name>呼呼呼山</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>恢复更新</title>
    <link href="http://code4fun.me/2025/05/25/recover_update/"/>
    <id>http://code4fun.me/2025/05/25/recover_update/</id>
    <published>2025-05-25T19:34:54.000Z</published>
    <updated>2025-06-13T10:54:27.290Z</updated>
    
    <content type="html"><![CDATA[<p>断更多年之后，准备更新，先试一下是否还能正常发布。</p><blockquote><p><a href="">呼呼呼山</a>(<a href="http://code4fun.me">http://code4fun.me</a>)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;断更多年之后，准备更新，先试一下是否还能正常发布。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;&quot;&gt;呼呼呼山&lt;/a&gt;(&lt;a href=&quot;http://code4fun.me&quot;&gt;http://code4fun.me&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    
    <category term="碎碎念" scheme="http://code4fun.me/tags/碎碎念/"/>
    
  </entry>
  
  <entry>
    <title>Profile-guided optimizations[10/15]</title>
    <link href="http://code4fun.me/2020/06/30/Profile_guided_optimizations/"/>
    <id>http://code4fun.me/2020/06/30/Profile_guided_optimizations/</id>
    <published>2020-06-30T21:52:03.000Z</published>
    <updated>2025-06-13T10:54:27.235Z</updated>
    
    <content type="html"><![CDATA[<p>不知道是没有人在用还是怎么回事, 当用最懂中文的百度去搜索 “Profile-guided optimizations” 的时候, 只有两篇来自 CSDN 的文章, 一篇是直接复制加部分翻译的官方文档, 另一篇干脆就是直接把缩写都给颠倒了.</p><p><img src="/images/20200630220036926_1155.png" alt="baidu results"></p><p>这个技术说起来, 看文章的话从1998年就有了, 距今都已经二十多年了, 说起来算是一个比较旧的技术了, 但也许是使用场景比较有限导致了使用并不是很多吧. 说使用场景有限, 主要还是在大部分使用场景下, 我们用不到比较麻烦的去节省那点CPU, 对于客户端来说多占一点CPU其实用户也并没有特别大的感知, 而当不是服务人数足够多的时候, 我们没必要节省那点CPU.</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>对于编译类型的语言, 我们都知道会经过编译把我们之前的C++或者Java等的代码编成机器码, 然后才能让 CPU来执行. 而 CPU 在摩尔定律不在起作用的今天, 一个方案是提高 CPU 的核数来提升运算效率, 譬如8核 16核层出不穷. 核数多了, 当然只有提高并行效率来提升我们程序的运行效率.</p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-30 21:52:03</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不知道是没有人在用还是怎么回事, 当用最懂中文的百度去搜索 “Profile-guided optimizations” 的时候, 只有两篇来自 CSDN 的文章, 一篇是直接复制加部分翻译的官方文档, 另一篇干脆就是直接把缩写都给颠倒了.&lt;/p&gt;
&lt;p&gt;&lt;img src=</summary>
      
    
    
    
    
    <category term="performance" scheme="http://code4fun.me/tags/performance/"/>
    
  </entry>
  
  <entry>
    <title>六月 Flag 总结</title>
    <link href="http://code4fun.me/2020/06/30/6flag_summary/"/>
    <id>http://code4fun.me/2020/06/30/6flag_summary/</id>
    <published>2020-06-30T21:50:55.000Z</published>
    <updated>2025-06-13T10:54:27.234Z</updated>
    
    <content type="html"><![CDATA[<p>六月马上就结束了, 果然 Flag 都是完成不了的, 但是也不能说这个过程完全没有意义吧. 去掉最开始的flag, 一共写了9篇文章, 还有一篇写了一半的.</p><ul><li><a href="http://code4fun.me/2020/06/30/Vietnam_travel/">越南游记[9/15]</a></li><li><a href="http://code4fun.me/2020/06/23/xperf_diskio/">Xperf diskio action[8/15]</a></li><li><a href="http://code4fun.me/2020/06/24/windows_disk_tool/">Widnows 硬盘配置查询工具/命令[7/15]</a></li><li><a href="http://code4fun.me/2020/06/23/disk_allocation_size/">硬盘 Allocation Unit Size 设置[6/15]</a></li><li><a href="http://code4fun.me/2020/06/23/china_internet/">我看中国互联网发展[5/15]</a></li><li><a href="http://code4fun.me/2020/06/16/xperf/">xperf 入门[4/15]</a></li><li><a href="http://code4fun.me/2020/06/15/2020summary/">十年回首[3/15]</a></li><li><a href="http://code4fun.me/2020/06/10/search_engine/">我理解的搜索引擎[2/15]</a></li></ul><p>虽然这里面第 7 篇是纯灌水, 是复制了常用的几个命令的官方文档, 这里是计划后面在根据自己的使用场景替换一部分例子和加上一部分说明等. 一篇游记(9), 两篇瞎胡说(3, 5), 且这两篇瞎胡说感觉还没有写完, 其余的几篇还是比较偏技术的, 对于 xperf 的两篇(4, 8)个人感觉还是比较满意, 可能是对 performance tuning 的需求不是特别高, 所以文章并不是很多, 还算比较原创类型的文章, 后面应该会进一步把我的一些使用经验写出来.</p><p>这个过程确实让我通过记录梳理了一些思路, 同时也通过在闲暇时间利用手机码一些字, 算充分利用了时间.</p><p>另外就是我一直很鄙视微信公众号这种闭塞的平台, 但是后来想通了, 一种使得生活更加美丽的方法, 不是不管不顾, 而是加入其中去努力呼唤, 所以又把之前注销的公众号重新启用, 搬一些文章过去.</p><p><img src="/images/20200630225937167_25109.jpg" alt="公众号"></p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-30 21:50:55</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;六月马上就结束了, 果然 Flag 都是完成不了的, 但是也不能说这个过程完全没有意义吧. 去掉最开始的flag, 一共写了9篇文章, 还有一篇写了一半的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://code4fun.me/2020/06/30/Vietna</summary>
      
    
    
    
    
    <category term="随笔" scheme="http://code4fun.me/tags/随笔/"/>
    
  </entry>
  
  <entry>
    <title>越南游记[9/15]</title>
    <link href="http://code4fun.me/2020/06/30/Vietnam_travel/"/>
    <id>http://code4fun.me/2020/06/30/Vietnam_travel/</id>
    <published>2020-06-30T19:14:49.000Z</published>
    <updated>2025-06-13T10:54:27.235Z</updated>
    
    <content type="html"><![CDATA[<p>其实是毕业的时候去的, 距今其实有两年了,要不是为了凑文章数目, 估计是不值得为他专门写一篇文章. 越南或者说整个东南亚地区, 似乎感觉上都差不多, 闷热潮湿的天气, 从城市穿过的河流, 严重依赖旅游业的海滨, 能讲两句中国话的小贩以及比较便宜的打车费用. 去之前本来还打算看一下<a href="https://m.douban.com/movie/subject/1291868/" target="_blank" rel="external">情人</a>来感受一下胡志明(西贡)的样子, 不过看了一半就不了了之了.</p><p>越南给我留下印象最深的就是河粉, 且恰逢之前听过味之道那期关于河粉的节目, <a href="https://wzd.pan.icu/88" target="_blank" rel="external">去越南吃河粉</a>, 不得不说河粉还是很不错的, 尤其是添加了柠檬和薄荷之后, 当然还有也出镜的很普遍的椰子水和冰咖啡, 确实是每隔一段路就有一个饮品店, 卖冰咖啡. 总有一种, 全世界除了国内大家都特别喜欢和咖啡的错觉. 不知道如果不是这次出行, 后面会不会注意到越南餐馆, 但似乎除了河粉, 别的当地吃的像炸春卷之类的就没啥意思了, 导致后面在芽庄的时候, 吃了两顿印度菜. 虽然做菜的水平不是很好, 但是在欧洲的时候还是有挺多中餐馆是越南人开的, 还是可以吸引一些老外前去.</p><p><img src="/images/20200630211449329_14770.png" alt="河粉"></p><p>去越南差不多两个必去的地方就是首都,胡志明和海边芽庄,芽庄的海应该是只能用普通来形容, 当然海边难免会有一顿海鲜烧烤, 样式挺多的, 但似乎也没有什么特别出彩的地方, 或者说是并不会比我去盒马或者哪里做的好.</p><p><img src="/images/20200630212740668_1724.png" alt="海鲜"></p><p>海边的另一个常规操作就是租个机车/电动车兜风, 然后还尴尬的遇到了车坏了的情况, 以及多加了不少油的情形. 另一方面似乎就是南边的区域的交通会在很大程度上依赖摩托车, 譬如之前去过国内的潮州,台湾,泰国或者越南这边,甚至在泰国的时候都能通过 Grub(东南亚滴滴) 打摩的.</p><p><img src="/images/20200630213303894_17.png" alt="摩托大军"></p><p>作为陆地接壤的国家, 所以也就做了一次跨国火车, 也就会经过一个中间在火车上需要下来去过海关, 再上火车进入中国的过程. 坐车前就看到网上说陆上海关出关的时候, 工作人员可能会找中国人要小费的情况, 果然遇到了, 本着我有理的原则, 还是让我言辞决绝了, 然后也是让通过了. 这个后面就是进入国内的入关手续, 两边的工作场景和着重一比较, 有一种从7,80年代穿越过来的错觉.</p><p><img src="/images/20200630213846900_23080.png" alt="火车"></p><p>总体上来说, 越南这个国家从公职人员的气质和着装给人一种我国之前的感觉, 并且当地较低的消费水平和人民工资, 使得当地人会坑骗中国人, 不过那一碗河粉确实是不虚此行.</p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-30 19:14:49</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;其实是毕业的时候去的, 距今其实有两年了,要不是为了凑文章数目, 估计是不值得为他专门写一篇文章. 越南或者说整个东南亚地区, 似乎感觉上都差不多, 闷热潮湿的天气, 从城市穿过的河流, 严重依赖旅游业的海滨, 能讲两句中国话的小贩以及比较便宜的打车费用. 去之前本来还打算</summary>
      
    
    
    
    
    <category term="travel" scheme="http://code4fun.me/tags/travel/"/>
    
  </entry>
  
  <entry>
    <title>Widnows 硬盘配置查询工具/命令[7/15]</title>
    <link href="http://code4fun.me/2020/06/24/windows_disk_tool/"/>
    <id>http://code4fun.me/2020/06/24/windows_disk_tool/</id>
    <published>2020-06-24T18:44:39.000Z</published>
    <updated>2025-06-13T10:54:27.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="fsutil-fsinfo"><a href="#fsutil-fsinfo" class="headerlink" title="fsutil fsinfo"></a>fsutil fsinfo</h2><p>该命令主要是可以列出当前电脑上所包含的各个盘的信息, 类型, 以及一些文件系统相关的信息, 对于Windows主要是 NTFS的信息.</p><h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">fsutil fsinfo [drives]</div><div class="line">fsutil fsinfo [drivetype] &lt;volumepath&gt;</div><div class="line">fsutil fsinfo [ntfsinfo] &lt;rootpath&gt;</div><div class="line">fsutil fsinfo [statistics] &lt;volumepath&gt;</div><div class="line">fsutil fsinfo [volumeinfo] &lt;rootpath&gt;</div></pre></td></tr></table></figure><h3 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h3><table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td>drives</td><td>Lists all drives in the computer.</td></tr><tr><td>drivetype</td><td>Queries a drive and lists its type, for example CD-ROM drive.</td></tr><tr><td>ntfsinfo</td><td>Lists NTFS specific volume information for the specified volume, such as the number of sectors, total clusters, free clusters, and the start and end of the MFT Zone.</td></tr><tr><td>sectorinfo</td><td>Lists information about the hardware’s sector size and alignment.</td></tr><tr><td>statistics</td><td>Lists file system statistics for the specified volume, such as metadata, log file, and MFT reads and writes.</td></tr><tr><td>volumeinfo</td><td>Lists information for the specified volume, such as the file system, and whether the volume supports case-sensitive file names, unicode in file names, disk quotas, or is a DirectAccess (DAX) volume.</td></tr><tr><td><code>&lt;volumepath&gt;:</code></td><td>Specifies the drive letter (followed by a colon).</td></tr><tr><td><code>&lt;rootpath&gt;:</code></td><td>Specifies the drive letter (followed by a colon) of the root drive.</td></tr></tbody></table><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p>To list all of the drives in the computer, type:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fsutil fsinfo drives</div></pre></td></tr></table></figure><p>Output similar to the following displays:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Drives: A:\ C:\ D:\ E:\</div></pre></td></tr></table></figure><p>To query the drive type of drive C, type:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">fsutil fsinfo drivetype c:</div><div class="line"></div><div class="line">C:\&gt;fsutil fsinfo drivetype D:</div><div class="line">D: - Fixed Drive</div><div class="line"></div><div class="line">C:\&gt;fsutil fsinfo drivetype Z:</div><div class="line">Z: - Remote/Network Drive</div></pre></td></tr></table></figure><p>Possible results of the query include:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Unknown Drive</div><div class="line">No such Root Directory</div><div class="line">Removable Drive, for example floppy</div><div class="line">Fixed Drive</div><div class="line">Remote/Network Drive</div><div class="line">CD-ROM Drive</div><div class="line">Ram Disk</div></pre></td></tr></table></figure><p>To query the volume information for volume E, type:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fsinfo volumeinfo e:\</div></pre></td></tr></table></figure><p>Output similar to the following displays:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Volume Name : Volume</div><div class="line">Serial Number : 0xd0b634d9</div><div class="line">Max Component Length : 255</div><div class="line">File System Name : NTFS</div><div class="line">Supports Named Streams</div><div class="line">Is DAX Volume</div></pre></td></tr></table></figure><p>To query drive F for NTFS-specific volume information, type:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fsutil fsinfo ntfsinfo f:</div></pre></td></tr></table></figure><p>Output similar to the following displays:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">NTFS Volume Serial Number : 0xe660d46a60d442cb</div><div class="line">Number Sectors : 0x00000000010ea04f</div><div class="line">Total Clusters : 0x000000000021d409</div><div class="line">Mft Zone End : 0x0000000000004700</div></pre></td></tr></table></figure><p>To query the file system’s underlying hardware for sector information, type:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fsinfo sectorinfo d:</div></pre></td></tr></table></figure><p>Output similar to the following displays:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">D:\&gt;fsutil fsinfo sectorinfo d:</div><div class="line">LogicalBytesPerSector : 4096</div><div class="line">PhysicalBytesPerSectorForAtomicity : 4096</div><div class="line">Trim Not Supported</div><div class="line">DAX capable</div></pre></td></tr></table></figure><p>To query the file system statistics for drive E, type:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fsinfo statistics e:</div></pre></td></tr></table></figure><p>Output similar to the following displays:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">File System Type : NTFS</div><div class="line">Version : 1</div><div class="line">UserFileReads : 75021</div><div class="line">UserFileReadBytes : 1305244512</div><div class="line">LogFileWriteBytes : 180936704</div></pre></td></tr></table></figure><h2 id="Get-PhysicalDisk"><a href="#Get-PhysicalDisk" class="headerlink" title="Get-PhysicalDisk"></a>Get-PhysicalDisk</h2><p>The <code>Get-PhysicalDisk</code> cmdlet gets a list of all PhysicalDisk objects visible across any available Storage Management Providers, or optionally a filtered list of disks.</p><p>Gets a list of all PhysicalDisk objects visible across any available Storage Management Providers, or optionally a filtered list.</p><h3 id="SYNTAX"><a href="#SYNTAX" class="headerlink" title="SYNTAX"></a>SYNTAX</h3><h4 id="ByUniqueId-Default"><a href="#ByUniqueId-Default" class="headerlink" title="ByUniqueId (Default)"></a>ByUniqueId (Default)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk [-UniqueId &lt;String&gt;] [-Usage &lt;PhysicalDiskUsage&gt;] [-Description &lt;String&gt;]</div><div class="line"> [-Manufacturer &lt;String&gt;] [-Model &lt;String&gt;] [-CanPool &lt;Boolean&gt;] [-HealthStatus &lt;PhysicalDiskHealthStatus&gt;]</div><div class="line"> [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByObjectId"><a href="#ByObjectId" class="headerlink" title="ByObjectId"></a>ByObjectId</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk [-ObjectId &lt;String&gt;] [-Usage &lt;PhysicalDiskUsage&gt;] [-Description &lt;String&gt;]</div><div class="line"> [-Manufacturer &lt;String&gt;] [-Model &lt;String&gt;] [-CanPool &lt;Boolean&gt;] [-HealthStatus &lt;PhysicalDiskHealthStatus&gt;]</div><div class="line"> [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByName"><a href="#ByName" class="headerlink" title="ByName"></a>ByName</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk [[-FriendlyName] &lt;String&gt;] [[-SerialNumber] &lt;String&gt;] [-Usage &lt;PhysicalDiskUsage&gt;]</div><div class="line"> [-Description &lt;String&gt;] [-Manufacturer &lt;String&gt;] [-Model &lt;String&gt;] [-CanPool &lt;Boolean&gt;]</div><div class="line"> [-HealthStatus &lt;PhysicalDiskHealthStatus&gt;] [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByInputObject"><a href="#ByInputObject" class="headerlink" title="ByInputObject"></a>ByInputObject</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk -InputObject &lt;CimInstance&gt; [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByStorageSubsystem"><a href="#ByStorageSubsystem" class="headerlink" title="ByStorageSubsystem"></a>ByStorageSubsystem</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk -StorageSubsystem &lt;CimInstance&gt; [-Usage &lt;PhysicalDiskUsage&gt;] [-Description &lt;String&gt;]</div><div class="line"> [-Manufacturer &lt;String&gt;] [-Model &lt;String&gt;] [-CanPool &lt;Boolean&gt;] [-HealthStatus &lt;PhysicalDiskHealthStatus&gt;]</div><div class="line"> [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByStorageEnclosure"><a href="#ByStorageEnclosure" class="headerlink" title="ByStorageEnclosure"></a>ByStorageEnclosure</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk -StorageEnclosure &lt;CimInstance&gt; [-Usage &lt;PhysicalDiskUsage&gt;] [-Description &lt;String&gt;]</div><div class="line"> [-Manufacturer &lt;String&gt;] [-Model &lt;String&gt;] [-CanPool &lt;Boolean&gt;] [-HealthStatus &lt;PhysicalDiskHealthStatus&gt;]</div><div class="line"> [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByStorageNode"><a href="#ByStorageNode" class="headerlink" title="ByStorageNode"></a>ByStorageNode</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk -StorageNode &lt;CimInstance&gt; [-PhysicallyConnected] [-Usage &lt;PhysicalDiskUsage&gt;]</div><div class="line"> [-Description &lt;String&gt;] [-Manufacturer &lt;String&gt;] [-Model &lt;String&gt;] [-CanPool &lt;Boolean&gt;]</div><div class="line"> [-HealthStatus &lt;PhysicalDiskHealthStatus&gt;] [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByStoragePool"><a href="#ByStoragePool" class="headerlink" title="ByStoragePool"></a>ByStoragePool</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk -StoragePool &lt;CimInstance&gt; [-Usage &lt;PhysicalDiskUsage&gt;] [-Description &lt;String&gt;]</div><div class="line"> [-Manufacturer &lt;String&gt;] [-Model &lt;String&gt;] [-CanPool &lt;Boolean&gt;] [-HealthStatus &lt;PhysicalDiskHealthStatus&gt;]</div><div class="line"> [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByVirtualDisk"><a href="#ByVirtualDisk" class="headerlink" title="ByVirtualDisk"></a>ByVirtualDisk</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Get-PhysicalDisk -VirtualDisk &lt;CimInstance&gt; [-VirtualRangeMin &lt;UInt64&gt;] [-VirtualRangeMax &lt;UInt64&gt;]</div><div class="line"> [-HasAllocations &lt;Boolean&gt;] [-SelectedForUse &lt;Boolean&gt;] [-NoRedundancy] [-Usage &lt;PhysicalDiskUsage&gt;]</div><div class="line"> [-Description &lt;String&gt;] [-Manufacturer &lt;String&gt;] [-Model &lt;String&gt;] [-CanPool &lt;Boolean&gt;]</div><div class="line"> [-HealthStatus &lt;PhysicalDiskHealthStatus&gt;] [-CimSession &lt;CimSession&gt;] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h3 id="EXAMPLES"><a href="#EXAMPLES" class="headerlink" title="EXAMPLES"></a>EXAMPLES</h3><h4 id="Example-1-Getting-all-physical-disks"><a href="#Example-1-Getting-all-physical-disks" class="headerlink" title="Example 1: Getting all physical disks"></a>Example 1: Getting all physical disks</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; Get-PhysicalDisk</div><div class="line">FriendlyName        CanPool            OperationalStatus   HealthStatus        Usage                              Size </div><div class="line">------------        --------            -----------------   ------------        -----                              ---- </div><div class="line">PhysicalDisk4       False               OK                  Healthy             Data Store                        25 GB</div></pre></td></tr></table></figure><p>This example returns an array of all PhysicalDisk objects present in the computer. A storage management provider is required to manage physical disks.</p><h4 id="Example-2-Getting-all-physical-disks-eligible-for-adding-to-a-storage-pool"><a href="#Example-2-Getting-all-physical-disks-eligible-for-adding-to-a-storage-pool" class="headerlink" title="Example 2: Getting all physical disks eligible for adding to a storage pool"></a>Example 2: Getting all physical disks eligible for adding to a storage pool</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt;Get-PhysicalDisk -CanPool $True</div></pre></td></tr></table></figure><p>This example returns an array of PhysicalDisk objects that are available for adding to a storage pool (they are in a primordial pool).</p><h3 id="PARAMETERS"><a href="#PARAMETERS" class="headerlink" title="PARAMETERS"></a>PARAMETERS</h3><h4 id="CanPool"><a href="#CanPool" class="headerlink" title="-CanPool"></a>-CanPool</h4><p>Gets physical disks that are available for use in a storage pool.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> Boolean</div><div class="line">Parameter Sets: ByUniqueId, ByObjectId, ByName, ByStorageSubsystem, ByStorageEnclosure, ByStorageNode, ByStoragePool, ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="CimSession"><a href="#CimSession" class="headerlink" title="-CimSession"></a>-CimSession</h4><p>Runs the cmdlet in a remote session or on a remote computer.<br>Enter a computer name or a session object, such as the output of a <a href="https://docs.microsoft.com/powershell/module/cimcmdlets/new-cimsession" target="_blank" rel="external">New-CimSession</a> or <a href="https://go.microsoft.com/fwlink/p/?LinkId=227966" target="_blank" rel="external">Get-CimSession</a> cmdlet.<br>The default is the current session on the local computer.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimSession</div><div class="line">Parameter Sets: (All)</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="Description"><a href="#Description" class="headerlink" title="-Description"></a>-Description</h4><p>Gets the physical disks that contain the specified description.<br>Enter a description or use wildcard characters to enter a description pattern.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String</div><div class="line">Parameter Sets: ByUniqueId, ByObjectId, ByName, ByStorageSubsystem, ByStorageEnclosure, ByStorageNode, ByStoragePool, ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="FriendlyName"><a href="#FriendlyName" class="headerlink" title="-FriendlyName"></a>-FriendlyName</h4><p>Gets the physical disk with the specified friendly name.<br>Enter a friendly name or use wildcard characters to enter a name pattern.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String</div><div class="line">Parameter Sets: ByName</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> <span class="number">0</span></div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="HasAllocations"><a href="#HasAllocations" class="headerlink" title="-HasAllocations"></a>-HasAllocations</h4><p>Indicates whether the cmdlet gets a list of physical disks that host the extents of the virtual disk that you specify by using the <em>VirtualDisk</em> parameter.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> Boolean</div><div class="line">Parameter Sets: ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="HealthStatus"><a href="#HealthStatus" class="headerlink" title="-HealthStatus"></a>-HealthStatus</h4><p>Specifies the <strong>health status</strong> of physical disks.<br>The acceptable values for this parameter are:</p><ul><li>Healthy </li><li>Unhealthy </li><li>Unknown </li><li>Warning</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> PhysicalDiskHealthStatus</div><div class="line">Parameter Sets: ByUniqueId, ByObjectId, ByName, ByStorageSubsystem, ByStorageEnclosure, ByStorageNode, ByStoragePool, ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line">Accepted values: Healthy, Warning, Unhealthy, Unknown</div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="InputObject"><a href="#InputObject" class="headerlink" title="-InputObject"></a>-InputObject</h4><p>Specifies the input object that is used in a pipeline command.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByInputObject</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">True</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="Manufacturer"><a href="#Manufacturer" class="headerlink" title="-Manufacturer"></a>-Manufacturer</h4><p>Gets the physical disks with the specified manufacturer.<br>Enter a manufacturer string or use wildcard characters to enter a pattern.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String</div><div class="line">Parameter Sets: ByUniqueId, ByObjectId, ByName, ByStorageSubsystem, ByStorageEnclosure, ByStorageNode, ByStoragePool, ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="Model"><a href="#Model" class="headerlink" title="-Model"></a>-Model</h4><p>Gets the physical disks of the specified model.<br>Enter a model string or use wildcard characters to enter a pattern.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String</div><div class="line">Parameter Sets: ByUniqueId, ByObjectId, ByName, ByStorageSubsystem, ByStorageEnclosure, ByStorageNode, ByStoragePool, ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="NoRedundancy"><a href="#NoRedundancy" class="headerlink" title="-NoRedundancy"></a>-NoRedundancy</h4><p>Indicates that this cmdlet gets physical disks that contain the last remaining copy of the data of a virtual disk.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> SwitchParameter</div><div class="line">Parameter Sets: ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="ObjectId"><a href="#ObjectId" class="headerlink" title="-ObjectId"></a>-ObjectId</h4><p>Specifies the ID of the physical disk to get.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String</div><div class="line">Parameter Sets: ByObjectId</div><div class="line"><span class="attr">Aliases:</span> PhysicalDiskObjectId</div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="PhysicallyConnected"><a href="#PhysicallyConnected" class="headerlink" title="-PhysicallyConnected"></a>-PhysicallyConnected</h4><p>Indicates that this cmdlet gets physical disks that are physically connected to the specified storage node.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> SwitchParameter</div><div class="line">Parameter Sets: ByStorageNode</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="SelectedForUse"><a href="#SelectedForUse" class="headerlink" title="-SelectedForUse"></a>-SelectedForUse</h4><p>Indicates whether the cmdlet gets a list of physical disks to host the extents that belong to the virtual disk specified by the <em>VirtualDisk</em> parameter.<br>Specify the physical disks to host the extents of a virtual disk by using the <em>PhysicalDisksToUse</em> parameter of the <strong>New-VirtualDisk</strong> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> Boolean</div><div class="line">Parameter Sets: ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="SerialNumber"><a href="#SerialNumber" class="headerlink" title="-SerialNumber"></a>-SerialNumber</h4><p>Specifies the serial number of the physical disk to get.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String</div><div class="line">Parameter Sets: ByName</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> <span class="number">1</span></div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="StorageEnclosure"><a href="#StorageEnclosure" class="headerlink" title="-StorageEnclosure"></a>-StorageEnclosure</h4><p>Specifies a storage enclosure associated with the physical disk that this cmdlet gets.<br>To obtain a <strong>StorageEnclosure</strong> object, use the <strong>Get-StorageEnclosure</strong> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByStorageEnclosure</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">True</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="StorageNode"><a href="#StorageNode" class="headerlink" title="-StorageNode"></a>-StorageNode</h4><p>Specifies a storage node as a <strong>CimInstance</strong> object.<br>The cmdlet gets the physical disk connected to the node that you specify.<br>To obtain a storage node object, use the <strong>Get-StorageNode</strong> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByStorageNode</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">True</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="StoragePool"><a href="#StoragePool" class="headerlink" title="-StoragePool"></a>-StoragePool</h4><p>Accepts a StoragePool object as input and gets the physical disks that belong to the pool.<br>The Storage Pool CIM object is exposed by the <strong>Get-StoragePool</strong> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByStoragePool</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">True</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="StorageSubsystem"><a href="#StorageSubsystem" class="headerlink" title="-StorageSubsystem"></a>-StorageSubsystem</h4><p>Specifies a storage subsystem.<br>This cmdlet gets physical disks attached to the storage subsystem that you specify.<br>To obtain a <strong>StorageSubsystem</strong> object, use the <strong>Get-StorageSubSystem</strong> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByStorageSubsystem</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">True</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="UniqueId"><a href="#UniqueId" class="headerlink" title="-UniqueId"></a>-UniqueId</h4><p>Gets only the physical disks with the specified IDs.<br>Type one or more IDs (separated by commas), or use wildcard characters to enter a pattern.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String</div><div class="line">Parameter Sets: ByUniqueId</div><div class="line"><span class="attr">Aliases:</span> Id</div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="Usage"><a href="#Usage" class="headerlink" title="-Usage"></a>-Usage</h4><p>Specifies an allocation method or usage.<br>This cmdlet gets the physical disks that have the specified allocation method.<br>The acceptable values for this parameter are:</p><ul><li>AutoSelect </li><li>HotSpare </li><li>Journal </li><li>ManualSelect </li><li>Retired </li><li>Unknown</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> PhysicalDiskUsage</div><div class="line">Parameter Sets: ByUniqueId, ByObjectId, ByName, ByStorageSubsystem, ByStorageEnclosure, ByStorageNode, ByStoragePool, ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line">Accepted values: Unknown, AutoSelect, ManualSelect, HotSpare, Retired, Journal</div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="VirtualDisk"><a href="#VirtualDisk" class="headerlink" title="-VirtualDisk"></a>-VirtualDisk</h4><p>Accepts a VirtualDisk object as input and gets the physical disks used by the virtual disk.<br>The VirtualDisk object is exposed by the <strong>Get-VirtualDisk</strong> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">True</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="VirtualRangeMax"><a href="#VirtualRangeMax" class="headerlink" title="-VirtualRangeMax"></a>-VirtualRangeMax</h4><p>This parameter is reserved for future use.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> UInt64</div><div class="line">Parameter Sets: ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="VirtualRangeMin"><a href="#VirtualRangeMin" class="headerlink" title="-VirtualRangeMin"></a>-VirtualRangeMin</h4><p>This parameter is reserved for future use.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> UInt64</div><div class="line">Parameter Sets: ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h2 id="Get-Disk"><a href="#Get-Disk" class="headerlink" title="Get-Disk"></a>Get-Disk</h2><p>The <strong>Get-Disk</strong> cmdlet gets one or more Disk objects visible to the operating system, or optionally a filtered list.</p><p>Gets one or more disks visible to the operating system.</p><blockquote><p>[!NOTE]<br>This cmdlet returns physical disk objects like basic disks and partitioned drive partitions.  Dynamic disks can span multiple pieces of physical media, so they will not be returned by Get-Disk. For more information, see <a href="https://docs.microsoft.com/windows/desktop/FileIO/basic-and-dynamic-disks" target="_blank" rel="external">Basic and Dynamic Disks</a>.</p></blockquote><h3 id="SYNTAX-1"><a href="#SYNTAX-1" class="headerlink" title="SYNTAX"></a>SYNTAX</h3><h4 id="ByNumber-Default"><a href="#ByNumber-Default" class="headerlink" title="ByNumber (Default)"></a>ByNumber (Default)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [[-Number] &lt;UInt32[]&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByUniqueId"><a href="#ByUniqueId" class="headerlink" title="ByUniqueId"></a>ByUniqueId</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-UniqueId &lt;String[]&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByName-1"><a href="#ByName-1" class="headerlink" title="ByName"></a>ByName</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-FriendlyName &lt;String[]&gt;] [-SerialNumber &lt;String[]&gt;] [-CimSession &lt;CimSession[]&gt;]</div><div class="line"> [-ThrottleLimit &lt;Int32&gt;] [-AsJob] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByPath"><a href="#ByPath" class="headerlink" title="ByPath"></a>ByPath</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-Path &lt;String[]&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob] [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByPartition"><a href="#ByPartition" class="headerlink" title="ByPartition"></a>ByPartition</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-Partition &lt;CimInstance&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByVirtualDisk-1"><a href="#ByVirtualDisk-1" class="headerlink" title="ByVirtualDisk"></a>ByVirtualDisk</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-VirtualDisk &lt;CimInstance&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByiSCSISession"><a href="#ByiSCSISession" class="headerlink" title="ByiSCSISession"></a>ByiSCSISession</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-iSCSISession &lt;CimInstance&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByiSCSIConnection"><a href="#ByiSCSIConnection" class="headerlink" title="ByiSCSIConnection"></a>ByiSCSIConnection</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-iSCSIConnection &lt;CimInstance&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByStorageSubSystem"><a href="#ByStorageSubSystem" class="headerlink" title="ByStorageSubSystem"></a>ByStorageSubSystem</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-StorageSubSystem &lt;CimInstance&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByStorageNode-1"><a href="#ByStorageNode-1" class="headerlink" title="ByStorageNode"></a>ByStorageNode</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-StorageNode &lt;CimInstance&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h4 id="ByStorageJob"><a href="#ByStorageJob" class="headerlink" title="ByStorageJob"></a>ByStorageJob</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-Disk [-StorageJob &lt;CimInstance&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</div><div class="line"> [&lt;CommonParameters&gt;]</div></pre></td></tr></table></figure><h3 id="EXAMPLES-1"><a href="#EXAMPLES-1" class="headerlink" title="EXAMPLES"></a>EXAMPLES</h3><h4 id="Example-1-Get-all-disks"><a href="#Example-1-Get-all-disks" class="headerlink" title="Example 1: Get all disks"></a>Example 1: Get all disks</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt;Get-Disk</div></pre></td></tr></table></figure><p>This example gets all disks visible to the operating system.</p><h4 id="Example-2-Get-a-disk-by-disk-number"><a href="#Example-2-Get-a-disk-by-disk-number" class="headerlink" title="Example 2: Get a disk by disk number"></a>Example 2: Get a disk by disk number</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt;Get-Disk -Number 6</div></pre></td></tr></table></figure><p>This example gets disk 6.</p><h4 id="Example-3-Get-all-USB-disks"><a href="#Example-3-Get-all-USB-disks" class="headerlink" title="Example 3: Get all USB disks"></a>Example 3: Get all USB disks</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt;Get-Disk | Where-Object -FilterScript &#123;$_.Bustype -Eq &quot;USB&quot;&#125;</div></pre></td></tr></table></figure><p>This example gets all disks attached via the USB bus by piping the output of Get-Disk to the <strong>Where-Object</strong> cmdlet, and filtering by the USB value of the Bustype property.</p><h4 id="Example-4-Get-the-iSCSI-sessions-for-all-iSCSI-disks"><a href="#Example-4-Get-the-iSCSI-sessions-for-all-iSCSI-disks" class="headerlink" title="Example 4: Get the iSCSI sessions for all iSCSI disks"></a>Example 4: Get the iSCSI sessions for all iSCSI disks</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt;Get-Disk | Where-Object -FilterScript &#123;$_.BusType -Eq &quot;iSCSI&quot;&#125; |</div><div class="line">Get-IscsiSession | Format-Table</div></pre></td></tr></table></figure><p>This example gets all disks attached via the iSCSI bus by piping the output of Get-Disk to the <strong>Where-Object</strong> cmdlet, and filtering by the iSCSI value of the Bustype property.<br>It then passes the Disk objects in the pipeline to the <strong>Get-IscsiSession</strong> cmdlet, which gets the associated iSCSI sessions, and then pipes the output to the <strong>Format-Table</strong> cmdlet for simplified display.</p><h3 id="PARAMETERS-1"><a href="#PARAMETERS-1" class="headerlink" title="PARAMETERS"></a>PARAMETERS</h3><h4 id="AsJob"><a href="#AsJob" class="headerlink" title="-AsJob"></a>-AsJob</h4><p>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> SwitchParameter</div><div class="line">Parameter Sets: (All)</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="CimSession-1"><a href="#CimSession-1" class="headerlink" title="-CimSession"></a>-CimSession</h4><p>Runs the cmdlet in a remote session or on a remote computer.<br>Enter a computer name or a session object, such as the output of a <a href="http://go.microsoft.com/fwlink/p/?LinkId=227967" target="_blank" rel="external">New-CimSession</a> or <a href="http://go.microsoft.com/fwlink/p/?LinkId=227966" target="_blank" rel="external">Get-CimSession</a> cmdlet.<br>The default is the current session on the local computer.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimSession[]</div><div class="line">Parameter Sets: (All)</div><div class="line"><span class="attr">Aliases:</span> Session</div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="FriendlyName-1"><a href="#FriendlyName-1" class="headerlink" title="-FriendlyName"></a>-FriendlyName</h4><p>Gets the disk with the specified friendly name.<br>Enter a friendly name, or use wildcard characters to enter a name pattern.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String[]</div><div class="line">Parameter Sets: ByName</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="Number"><a href="#Number" class="headerlink" title="-Number"></a>-Number</h4><p>Specifies the disk number for which to get the associated Disk object.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> UInt32[]</div><div class="line">Parameter Sets: ByNumber</div><div class="line"><span class="attr">Aliases:</span> DeviceId</div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> <span class="number">0</span></div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByPropertyName)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="Partition"><a href="#Partition" class="headerlink" title="-Partition"></a>-Partition</h4><p>Accepts a Partition object as input.<br>The Partition CIM object is exposed by the <a href="http://technet.microsoft.com/library/85bb3c53-536e-408f-b159-28e91afeb1a1" target="_blank" rel="external">Get-Partition</a> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByPartition</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="Path"><a href="#Path" class="headerlink" title="-Path"></a>-Path</h4><p>Contains valid path information.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String[]</div><div class="line">Parameter Sets: ByPath</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByPropertyName)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="SerialNumber-1"><a href="#SerialNumber-1" class="headerlink" title="-SerialNumber"></a>-SerialNumber</h4><p>Specifies an array of serial numbers associated with disks that this cmdlet gets.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String[]</div><div class="line">Parameter Sets: ByName</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="StorageJob"><a href="#StorageJob" class="headerlink" title="-StorageJob"></a>-StorageJob</h4><p>Specifies a storage job object that is associated with disks that this cmdlet gets.<br>To obtain a storage job, use the Get-StorageJob cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByStorageJob</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="StorageNode-1"><a href="#StorageNode-1" class="headerlink" title="-StorageNode"></a>-StorageNode</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByStorageNode</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="StorageSubSystem"><a href="#StorageSubSystem" class="headerlink" title="-StorageSubSystem"></a>-StorageSubSystem</h4><p>Specifies the storage subsystem from which this cmdlet gets disks.<br>To obtain a <strong>StorageSubsystem</strong> object, use the Get-StorageSubSystem cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByStorageSubSystem</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="ThrottleLimit"><a href="#ThrottleLimit" class="headerlink" title="-ThrottleLimit"></a>-ThrottleLimit</h4><p>Specifies the maximum number of concurrent operations that can be established to run the cmdlet.<br>If this parameter is omitted or a value of <code>0</code> is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.<br>The throttle limit applies only to the current cmdlet, not to the session or to the computer.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> Int32</div><div class="line">Parameter Sets: (All)</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="UniqueId-1"><a href="#UniqueId-1" class="headerlink" title="-UniqueId"></a>-UniqueId</h4><p>Gets only the disks with the specified IDs.<br>Type one or more IDs (separated by commas).</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> String[]</div><div class="line">Parameter Sets: ByUniqueId</div><div class="line"><span class="attr">Aliases:</span> Id</div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">False</span></div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="VirtualDisk-1"><a href="#VirtualDisk-1" class="headerlink" title="-VirtualDisk"></a>-VirtualDisk</h4><p>Accepts a VirtualDisk object as input.<br>The Virtual Disk CIM object is exposed by the <a href="http://technet.microsoft.com/library/0eeba53f-6468-485f-a680-49260b4c83f0" target="_blank" rel="external">Get-VirtualDisk</a> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByVirtualDisk</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="iSCSIConnection"><a href="#iSCSIConnection" class="headerlink" title="-iSCSIConnection"></a>-iSCSIConnection</h4><p>Accepts an iSCSIConnection object as input.<br>The iSCSI Connection CIM object is exposed by the <a href="http://technet.microsoft.com/library/e566d297-76ad-48d0-b5af-11674f23b080" target="_blank" rel="external">Get-IscsiConnection</a> cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByiSCSIConnection</div><div class="line"><span class="attr">Aliases:</span> </div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><h4 id="iSCSISession"><a href="#iSCSISession" class="headerlink" title="-iSCSISession"></a>-iSCSISession</h4><p>Accepts an iSCSISession object as input.<br>The iSCSI Session CIM object is exposed by the Get-IscsiSession cmdlet.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Type:</span> CimInstance</div><div class="line">Parameter Sets: ByiSCSISession</div><div class="line"><span class="attr">Aliases:</span></div><div class="line"></div><div class="line"><span class="attr">Required:</span> <span class="literal">False</span></div><div class="line"><span class="attr">Position:</span> Named</div><div class="line">Default value: None</div><div class="line">Accept pipeline input: <span class="literal">True</span> (ByValue)</div><div class="line">Accept wildcard characters: <span class="literal">False</span></div></pre></td></tr></table></figure><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-24 18:44:39</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;fsutil-fsinfo&quot;&gt;&lt;a href=&quot;#fsutil-fsinfo&quot; class=&quot;headerlink&quot; title=&quot;fsutil fsinfo&quot;&gt;&lt;/a&gt;fsutil fsinfo&lt;/h2&gt;&lt;p&gt;该命令主要是可以列出当前电脑上所包含的各个盘的信息,</summary>
      
    
    
    
    
    <category term="performance" scheme="http://code4fun.me/tags/performance/"/>
    
  </entry>
  
  <entry>
    <title>我看中国互联网发展[5/15]</title>
    <link href="http://code4fun.me/2020/06/23/china_internet/"/>
    <id>http://code4fun.me/2020/06/23/china_internet/</id>
    <published>2020-06-23T20:05:04.000Z</published>
    <updated>2025-06-13T10:54:27.236Z</updated>
    
    <content type="html"><![CDATA[<p>互联网的发展总是依赖于基础建设的。<br>互联网的发展十分讲究讲究时机, 不超前抓不住机会，但是太超前又会死掉。</p><h2 id="审查"><a href="#审查" class="headerlink" title="审查"></a>审查</h2><p>审查是中文互联网内容领域一直绕不过去的话题，不同的时期，不同的平台的审查标准也是千奇百怪，可能一个平台热传的内容到另一个平台就发不出去，可能你多年前发的一条状态今天被删除了。当然这种问题的标准，也不会有一个公开的。这种现状在一定程度上导致了用户的自我审查，就是在发东西之前，先思考一下这个话题能不能发，发出去会不会被删。对于自我审查，我是觉得这是一件十分要不得的事情。严格的自我审查一方面会束缚住人的表达，另一方面可能会使得平台的审查机制变得更加严苛。很怕最终变成某篇小说里写的那样，各种社交媒体账号都上交给国家，发一条微博需要提前向有关部门申请，然后说脏话要按量和级别来购买。虽然我讨厌说脏话，但更讨厌说不出话。另一方面，为了躲避机器的自动审查，各种关键字的替换，缩写以及更有甚者用一些隐藏的字符放在文字中间。这也是很讨厌的一种行为，作为一个老派的互联网开放论人士，反感一切破坏搜索与公开的行为。<br>国内目前很多资讯类产品前期想吸引用户，尤其是男性用户，很简单的做法就是激发人类原始的欲望，譬如小密圈（现在的知识星球）主要靠的是各种擦边球乃至十分直白的色情内容，以及即刻开始的随处可见的任务，然后随着用户量的增加，再去除这些。去掉之后的风险就是可能会带来大量的用户流失，例如 Tumblr。</p><h2 id="视频版权"><a href="#视频版权" class="headerlink" title="视频版权"></a>视频版权</h2><p>近几年国内的版权意识越来越强了，当然也得益于比较低廉的会员费，做活动购买的话，各大网站基本上都是一年在100元以内，基本上也就是国外 Netflix 等一个月的费用。作为一个国内的大的视频平台的会员基本都有（腾讯，优酷，爱奇艺，芒果，哔哩哔哩）的人应该还是可以稍微说一下自己对各大平台的情况的。这里面最讨厌的平台应该就是爱奇艺了，开会员的初衷应该就是去广告了，然而该平台却搞出来会员专属广告，然后超前点播应该也是起于此吧。B站的会员的话其实用处不算特别大，因为本身就不加广告，而会员主要就是追番可以多看一集或者看一些会员专属救番，所以基本上属于发电行为。而腾讯应该确实是厉害，好多很火的国创动漫B站都没有版权，而腾讯却有，譬如一人之下和狐妖小红娘等。优酷的没落其实还是挺令人奇怪的，应该算是国内做的很早的视频网站，并且当初也产生了很多现象级的网剧，例如万合天宜的，以及有很多知名的个人创造者，像老湿，敖厂长等，但不知道为何变到现在这样，即使有会员一年也看不几次，只是偶尔要搜一些很老的剧的时候才会去看一下。芒果的话只能说综艺强无敌，单一个存在了二十多年的快乐大本营应该就是大部分电视台做不到的事情了，以及各种可能是买的韩国版权但是做出来就霸占各种热搜的综艺。</p><h2 id="Bad-Thing"><a href="#Bad-Thing" class="headerlink" title="Bad-Thing"></a>Bad-Thing</h2><p>国内的互联网发展似乎是往 Evil 和 Bad 方向发展. 不说我心中的罪恶头子， 找工作都没有投他家简历的公司 – 百度。其余的似乎也没有好到哪里去，巨头都是一步步往封闭里发展，为了让用户都装上自己的 APP 从而可以更方便的盗取用户隐私，无处不在的提醒你要用 APP 打开。之前以资讯抓取聚合起家的即刻，不知道为何在整改一年之后，只保留了社交部分，资讯方面完全删除了。另一方面就是随着互联网的能力越来越大，管控也越来越严，以至于都要类似区分 Android 和安卓一样，把互联网分成互联网和中国互联网。另一方面是头条系的壮大以及由此产生的影响，利用算法的强大，把每个人装到一个 Bubble 里面，你训练了算法，而算法进一步吞没了你。</p><p>万物之中，希望最美。愿互联网可以向更好的方向发展。</p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-23 20:05:04</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;互联网的发展总是依赖于基础建设的。&lt;br&gt;互联网的发展十分讲究讲究时机, 不超前抓不住机会，但是太超前又会死掉。&lt;/p&gt;
&lt;h2 id=&quot;审查&quot;&gt;&lt;a href=&quot;#审查&quot; class=&quot;headerlink&quot; title=&quot;审查&quot;&gt;&lt;/a&gt;审查&lt;/h2&gt;&lt;p&gt;审查是中文互</summary>
      
    
    
    
    
    <category term="internet" scheme="http://code4fun.me/tags/internet/"/>
    
  </entry>
  
  <entry>
    <title>Xperf diskio action[8/15]</title>
    <link href="http://code4fun.me/2020/06/23/xperf_diskio/"/>
    <id>http://code4fun.me/2020/06/23/xperf_diskio/</id>
    <published>2020-06-23T14:03:19.000Z</published>
    <updated>2025-06-13T10:54:27.292Z</updated>
    
    <content type="html"><![CDATA[<p>可以使用的命令在<a href="https://docs.microsoft.com/en-us/windows-hardware/test/wpt/diskio" target="_blank" rel="external">官方文档</a>里面都包含了,很简单的一条命令, <code>-a diskio [-util &lt;n&gt;] [-summary] [-counts] [-detail] [-overlap] [-range T1 T2]</code>, 参数也就五个:</p><ul><li><code>-util [n]</code> disk utilization report, 其中 n 为这个 report 的时间间隔, 默认是 1s.</li><li><code>-summary</code> 输出 I/O summary report</li><li><code>-detail</code> 输出每个 I/O event</li><li><code>-overlap</code> 输出 I/O events 的 overlapping 关系, 也即当多线程执行的时候, 各个 IO 的开始与结束周期.</li><li><code>-range</code> T1 T2 把输出限制到 [T1, T2) 这个时间范围里面, 单位是微秒.</li></ul><p>默认的 report 就是  disk utilization report.</p><p>这个就是官方的所有文档了, 但是 report 是什么样子, 以及其中每个column的含义并没有详细的介绍. 下面通过一些例子来说明这个的使用.</p><h2 id="examples"><a href="#examples" class="headerlink" title="examples"></a>examples</h2><h3 id="util"><a href="#util" class="headerlink" title="-util"></a>-util</h3><p>我们可以在默认的不加任何参数的情况下使用, <code>-util</code> 获得所有disk分时间的使用率.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xperf -i D:\xperflog\xperf_trace_log.etl -tle -o d:\disk_usage.txt -a diskio -util</div></pre></td></tr></table></figure><p>如下图, 时间的单位是微秒, 所以也就是每 1s 各个硬盘的读写和使用率的统计信息, 下图有四组 Read, Write, Usage 对应着四块硬盘.</p><p><img src="/images/20200628140316905_1946.png" alt="disk util"></p><p>根据这些信息, 我们可以方便的统计在一段时间内, 硬盘使用率变化情况, 以及不同硬盘间的区别.</p><p><img src="/images/20200628141230255_20839.png" alt="disk usage"></p><p>上图就反应了两块硬盘以RAID0形式组成一个 volume 在一个时间段内进行大规模的读的时候的 disk usage 变化图. 我们可以发现随时间变化, disk usage越来越少, 而且下降频率越来越慢, 同时两块盘的 usage 基本保持一致, 也即两边负载相同. 这时候我们其实是可以去探究一下,为什么disk usage会在负载不变的情况下逐渐降低.</p><h3 id="summary"><a href="#summary" class="headerlink" title="-summary"></a>-summary</h3><p>summary 是按照文件来做的统计信息. 在一个给定或者全部的时间内, 每一个文件进行的读写的次数, 以及总共的 IO time.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xperf -i D:\xperf_trace_log.etl -tle -o diskio_summary.txt -a diskio -summary -range 368000000 866000000</div></pre></td></tr></table></figure><p><img src="/images/20200628142002577_12105.png" alt="summary"></p><p>一个典型的<code>-summary</code> 的output 如上图所示, 前三列对应总的 IO 次数(Count), IO 大小(Size, 单位是 bytes), IO 硬盘服务的时间 (SrvT, 单位是微秒), 后面紧跟着的是读(R)操作和写(W)操作各自的信息, 然后就是总的IO 所用的时间 (IOTime). 根据这个, 我们可以进一步分析每个文件的读写 IO 占比是多少, 是否符合预期, 以及其平均的 IO 时间是多少, 是否和硬盘所能提供的性能差不多, 平均一次 IO 处理多少数据, 是否过多或者过少.</p><h3 id="detail"><a href="#detail" class="headerlink" title="-detail"></a>-detail</h3><p>detail  包含所有单次 IO 的信息, 把所有 IO 发生的时候的情况按照时间顺序排列下来.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xperf -i D:\xperf_trace_log.etl  -tle -o diskio_detail.txt  -a diskio -detail -range 368000000 370000000</div></pre></td></tr></table></figure></p><p>一个输出结果如下图所示, 第一列就是 IO Type 有可能是 DiskWrite 也有可能是 DiskRead. 然后就是这次 IO 的开始时间和结束时间, 以及两种之差, 也就是这次 IO 的时间, 接下来是硬盘服务的时间, 以及该次 IO 的大小, 然后就是这次 IO 作用于硬盘上位置偏移量. Pri 指的是 IO 的优先级, 后面几个在报告里给出了解释.</p><ul><li>QD/I - Number of outstanding IOs at IO start time. IO 开始的时候的 queuelength</li><li>QD/C - Number of outstanding IOs at IO Completion time. IO 结束的时候的 queuelength</li><li>IBCB - Number of IOs that initialized before start time and completed before end time. 当前IO 开始前初始化且在当前IO结束之前结束的IO数量.</li><li>IBCA - Number of IOs that initialized before start time and completed after end time. 当前IO 开始前初始化且在当前IO结束之后才结束的IO数量.</li><li>IACB - Number of IOs that initialized after start time and completed before end time. 当前IO 开始后才初始化且在当前IO结束之前就结束的IO数量.</li></ul><p>然后就是 issue 该IO的 process 的名字及PID, 以及该IO 对应的硬盘和文件名.</p><p><img src="/images/20200628142949777_32343.png" alt="disk detail"></p><p>这里的信息是更进一步细节化的, 我们可以从中发现一些IO 的野值情况, 也可以发现单次IO是否稳定之类的信息, 如下图蓝色的线和橘色的线分别对应着不同 IO event中 IOTime 和 Disk SrvT的变化曲线.</p><p><img src="/images/20200628143602516_2846.png" alt="diskiotime"></p><h3 id="overlap"><a href="#overlap" class="headerlink" title="-overlap"></a>-overlap</h3><p>overlap 顾名思义是表示着不同的 IO 之间的交叠关系, 其大部分信息和detail 中的是相同的, 主要是把 IBCB等参数给具象化了, 你不但可以知道有几个这样的IO 还可以知道是哪些IO.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xperf -i D:\xperf_trace_log.etl -tle -o diskio_overlap.txt  -a diskio -overlap -range 368000000 370000000</div></pre></td></tr></table></figure><p>结果类似于下图这样, 他会对每个disk产生单独的数据,会在最开始标明是针对于哪个disk的, 在最左侧就是该IO 的event, <code>+</code> 表示 IO 的开始 <code>-</code> 表示结束, 而 <code>|</code> 表示仍在继续进行. 别的都可以根据文件名自行理解到, 其中 <code>IrpFlags</code> 是当前IO产生的时候我们给的一些 flag的组合, 其中 <code>Irp</code> 是 <code>IO request packet</code>的缩写, 其基本内容定义在 <code>wdm.h</code> 中, </p><p><img src="/images/20200628144519909_19384.png" alt="disk overlap"></p><p>其各个flag 的含义如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_NOCACHE                     0x00000001</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_PAGING_IO                   0x00000002</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_MOUNT_COMPLETION            0x00000002</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_SYNCHRONOUS_API             0x00000004</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_ASSOCIATED_IRP              0x00000008</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_BUFFERED_IO                 0x00000010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_DEALLOCATE_BUFFER           0x00000020</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_INPUT_OPERATION             0x00000040</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_SYNCHRONOUS_PAGING_IO       0x00000040</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_CREATE_OPERATION            0x00000080</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_READ_OPERATION              0x00000100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_WRITE_OPERATION             0x00000200</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_CLOSE_OPERATION             0x00000400</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_DEFER_IO_COMPLETION         0x00000800</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_OB_QUERY_NAME               0x00001000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_HOLD_DEVICE_QUEUE           0x00002000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_RETRY_IO_COMPLETION         0x00004000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_CLASS_CACHE_OPERATION       0x00008000</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_QUOTA_CHARGED                 0x01</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_ALLOCATED_MUST_SUCCEED        0x02</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_ALLOCATED_FIXED_SIZE          0x04</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> IRP_LOOKASIDE_ALLOCATION          0x08</span></div></pre></td></tr></table></figure><p>那么这里的 <code>0x062901</code> 也就很容易发现是由 <code>IRP_NOCACHE, IRP_DEFER_IO_COMPLETION, IRP_READ_OPERATION, IRP_HOLD_DEVICE_QUEUE</code> 这些 flag组合起来的, 说明这是一个不使用 cache, 直接读取内容的 raw io.</p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-23 14:03:19</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;可以使用的命令在&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/test/wpt/diskio&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;里面都包含了,很简单的一条命</summary>
      
    
    
    
    
    <category term="performance, xperf" scheme="http://code4fun.me/tags/performance-xperf/"/>
    
  </entry>
  
  <entry>
    <title>硬盘 Allocation Unit Size 设置[6/15]</title>
    <link href="http://code4fun.me/2020/06/23/disk_allocation_size/"/>
    <id>http://code4fun.me/2020/06/23/disk_allocation_size/</id>
    <published>2020-06-23T13:55:05.000Z</published>
    <updated>2025-06-13T10:54:27.237Z</updated>
    
    <content type="html"><![CDATA[<p>Disk allocation unit size, 故名思议, 是硬盘里面的分配单元. 也就是说当我们对硬盘进行划分的时候,是以多大的单元把数据均匀分配的. 这个概念并不是硬盘上的概念, 虽然对于硬盘也有最小的处理单元, 例如对于一个普通的机械硬盘, 由于扇区的划分, 可能一个最小的单位就是 4KB, 即使你只想读 1Byte的数据, 他还是要读取 4KB 的数据, 只是并没有把你不需要的那部分返回给你. 对于文件系统, 文件系统里的 Allocation 是一个类似于内存分配的概念, 为了可以更方便的索引, 我们不能把整个硬盘按照 Byte 或者 Bit 来拆分, 但是如果拆分单元过大的话, 那么就会造成很多空间的浪费, 对于一个 64KB 分配单元, 即使是一个只有一个字节的文件, 其占据的硬盘空间也是64KB. </p><p><img src="/images/20200624152254402_14086.png" alt="format allocation unit size choose"></p><p>分配单元的大小一般会没有什么影响, 但是当我们要用多快数据盘来保存数据的时候, 情况就变得比较重要了, 对于随机读写支持最好的 RAID0. 由于我们要把两块硬盘以条带方式组合(Striped volume)起来, 那么当如果我们以 4K 来作为 allocation unit size, 那么整个文件就会按照 4K 这种单元随机的分布到两块盘上, 此部分在 NTFS 文件系统中是完全不可控的, 那么一个文件会以什么方式分布到两块盘上就完全听天由命了. 这时候如果我们发起 16KB 大小的 IO, 就有可能把这个 16KB 分成 0 + 4, 1 + 3, 2 + 2 这三种情况. 等于也就是我们一个从应用程序方发出来的单个 IO 请求, 到了硬盘上就变成了两个 IO 请求, 而这种请求在操作系统层面上统计还是只视作一个 IO event, 只能单独查看每一个 IO event 才能确定这种情况. 同时另一方面, 当分配单元过大的时候, 我们又可能造成 IO event 的分配不均匀, 导致某一块盘的 IO 更多, 从而更早的达到 bottleneck.</p><p>综合起来说就是, 对于 allocation unit size 的确定要根据实际场景里面的 IO event 的主要的 size, 尽量的保证该 allocation size 要大于 IO size, 在此基础上再尽量小, 从而可以让数据可以尽可能的平均分配到多块盘上.</p><p>那么如何确定当前硬盘的 allocation unit size 是多少呢? 一种方式是就是尝试格式化, 会显示当前的 unit size. 另一种是用命令, 可以使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fsutil fsinfo ntfsinfo [your drive]</div></pre></td></tr></table></figure><p>其中的 Bytes Per Cluster 就是当前的 allocation size.</p><p><img src="/images/20200624162918982_22823.png" alt="fsutil"></p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-23 13:55:05</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Disk allocation unit size, 故名思议, 是硬盘里面的分配单元. 也就是说当我们对硬盘进行划分的时候,是以多大的单元把数据均匀分配的. 这个概念并不是硬盘上的概念, 虽然对于硬盘也有最小的处理单元, 例如对于一个普通的机械硬盘, 由于扇区的划分, 可</summary>
      
    
    
    
    
    <category term="performance" scheme="http://code4fun.me/tags/performance/"/>
    
  </entry>
  
  <entry>
    <title>xperf 入门[4/15]</title>
    <link href="http://code4fun.me/2020/06/16/xperf/"/>
    <id>http://code4fun.me/2020/06/16/xperf/</id>
    <published>2020-06-16T19:06:00.000Z</published>
    <updated>2025-06-13T10:54:27.291Z</updated>
    
    <content type="html"><![CDATA[<p>在做性能优化的时候， 由于服务器是 Windows, 而看到的好多工具， 像 DTrace 等都是只支持 Linux 的， 虽然 DTrace 微软官方有一个 <a href="https://github.com/microsoft/DTrace-on-Windows" target="_blank" rel="external">port</a>, 但是使用体验并不好. 然后, 花了挺多时间去网上搜一些 performance profiling tools的, 后来, 突然意识到自己简直是守着金山要饭. Xperf 就是一个十分好用的工具, 之前由于一次采样的时间过久(20多分钟), 导致文件很大 (10多G), 然后每次打开一个 View 的时间过长, 所以后来就不了了之了.</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Xperf 的官方文档可以参考<a href="https://docs.microsoft.com/en-us/previous-versions/windows/desktop/xperf/detailed-walkthrough" target="_blank" rel="external">这里</a>, 它是 Windows Performance Analyzer (WPA) 里面的一个重要组件, 另一个比较好用的组件是 F1 Profiler, 利用 F1Profiler 可以很方便地看到每一部分的 CPU usage,  inclusive 和 exclusive 的, 可以很具体到是哪一个函数,甚至是哪一行用了比较多的CPU.</p><p><img src="/images/20200616192136939_14753.png" alt="f1profiler"></p><p>但是 F1Profiler 的一个缺点是由于其是基于统计的信息,所以不能很好的了解一些具体的某些时段发生的事情,另外就是其主要信息是关于 CPU 的采样, 所以对于其余的例如IO方面,内存方面的问题就有些力不从心了.  而基于 event 信息的 xperf,就没有这些问题了.</p><p>首先当然是安装, 其包含在Widnows SDK 里面, 只需要在<a href="https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/" target="_blank" rel="external">官方SDK网站</a>, 这里下载最新的, 然后安装就可以了.</p><h2 id="Start-amp-amp-Stop"><a href="#Start-amp-amp-Stop" class="headerlink" title="Start &amp;&amp; Stop"></a>Start &amp;&amp; Stop</h2><p>用 xperf 来记录信息也十分方便, 只需要<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xperf -on FileIO+FILENAME+PROFILE -maxbuffers 1024</div></pre></td></tr></table></figure></p><p>这里其中<code>-on</code>后面的参数是可以根据自己的情况修改的, 具体包含哪些可以通过 <code>xperf -providers KF KG</code> 命令得到. 其中 <code>KF</code> 是所有的 kernal flags, 而 <code>KG</code> 则是一些组合, 例如 <code>Latency</code> 就等价于 <code>PROC_THREAD+LOADER+DISK_IO+HARD_FAULTS+DPC+INTERRUPT+CSWITCH+PROFILE</code>, 一些典型的 Flag.</p><p><img src="/images/20200617200954656_15520.png" alt="providers flag"></p><p>在 <code>xperf</code> 开始工作之后, 我们就可以启动我们想要 profiling 的应用程序, 由于 xperf 的设计问题, 目前我们不能单独的指定只profile 和某个 process 相关的信息, 所以会得到的相当于那个时间段之内全量的信息. 在采集一段时间后, 我们可以简单的通过 <code>xperf -d D:\xperf_trace_log.etl</code> 来把output 输出到指定路径指定文件.</p><h2 id="View"><a href="#View" class="headerlink" title="View"></a>View</h2><h3 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h3><p>最简单查看的方式就是直接双击打开， 就会在左侧列出一些小图，你也可以选择一些指定的细节到新建的view里面去。主界面大概是这样子的:</p><p><img src="/images/20200617203633264_30648.png" alt="main window WPA"></p><p>但是这种方式有一些缺点,首先第一个是当数据量很大的时候, 每个图都要等很长一段时间, 尤其是很多图的信息其实并不是你想要的. 另外一个,虽然从他生成的一些图里面可以很明显地看到一些问题, 但是有很多时候, 我们需要自己对这些单条的 event log 做一些分析统计和处理, 显然在 GUI 里面就不是很方便了.</p><h3 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h3><p>CLI 命令可以很方便的把我们需要的信息输出出来, 其基本命令格式也很简单,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xperf -i input.etl -o output.txt -a &lt;action_name&gt; [action_parameters]</div></pre></td></tr></table></figure></p><p>这种形式的命令来获得指定的输出, 例如如果我想得到我们 process1 在时间 [368000000, 866000000], 这里的时间为距离开始的微秒数,这也就是运行了368s到866s之间的信息, 内的CPU disk的信息就可以用下面的命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xperf -i input.etl  -tle -o cpudisk.txt  -a cpudisk -exes process1 -times 368000000 866000000</div></pre></td></tr></table></figure></p><p>这里我们加了 <code>-tle</code> 的参数, 是因为当长时间的运行的时候, 有的时候会漏掉一些event, 这时候会有下面类似的提示且不实际去执行我们的 action.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">2 Events were lost in this trace.  Data may be unreliable.</div><div class="line">This is usually caused by insufficient disk bandwidth for ETW logging.</div><div class="line">Please try increasing the minimum and maximum number of buffers and/or</div><div class="line">the buffer size.  Doubling these values would be a good first attempt.</div><div class="line">Please note, though, that this action increases the amount of memory</div><div class="line">reserved for ETW buffers, increasing memory pressure on your scenario.</div><div class="line">See &quot;xperf -help start&quot; for the associated command line options.</div></pre></td></tr></table></figure></p><p>而加了参数之后就可以正常执行了.<br>我们也可以通过下面的命令看到很具体的哪些文件被哪些service 访问了, 这个访问的 offset 和 IO的很详细的信息.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xperf -i input.etl  -tle -o diskio_detail.txt  -a diskio -summary -detail -range 368000000 370000000</div></pre></td></tr></table></figure></p><p>这样来自<code>-summary</code>这个参数的统计信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Count,     Size,     SrvT,  R-Count,   R-Size,   R-SrvT,  W-Count,   W-Size,   W-SrvT,   IOTime, Filename</div><div class="line">   3,        0,    95410,        0,        0,        0,        0,        0,        0,    95410, &quot;Unknown&quot;</div><div class="line"> 805, 52690944,   175036,        0,        0,        0,      805, 52690944,   175036,   252839, C:\kernel.etl</div><div class="line">   7,    36864,     7565,        2,     8192,     5587,        5,    28672,     1978,     7877, D:\$Mft</div><div class="line">   9,    40960,      735,        0,        0,        0,        9,    40960,      735,     7059, C:\$Mft</div><div class="line">   1,    65536,      439,        0,        0,        0,        1,    65536,      439,     2477, C:\Windows\System32\winevt\Logs\Security.evtx</div><div class="line">   1,     4096,       87,        0,        0,        0,        1,     4096,       87,       87, D:\$LogFile</div><div class="line">   2,     8192,      233,        0,        0,        0,        2,     8192,      233,      233, C:\ProgramData\Microsoft\Windows Defender\Support\MpWppTracing-05282020-040703-00000003-ffffffff.bin</div><div class="line">   2,   208896,      956,        0,        0,        0,        2,   208896,      956,      956, C:\$LogFile</div><div class="line">   3,    12288,      623,        0,        0,        0,        3,    12288,      623,     3712, C:\$BitMap</div></pre></td></tr></table></figure><p>和来自于 <code>-detail</code> 的具体的某一个时间的输出信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">QD/I - Number of outstanding IOs at IO start time.</div><div class="line">QD/C - Number of outstanding IOs at IO Completion time.</div><div class="line">IBCB - Number of IOs that initialized before start time and completed before end time.</div><div class="line">IBCA - Number of IOs that initialized before start time and completed after end time.</div><div class="line">IACB - Number of IOs that initialized after start time and completed before end time.</div><div class="line"></div><div class="line">   IO Type, Start Time,   End Time,    IO Time,  Disk SrvT,    IO Size,  Byte Offset,  Pri, QD/I, QD/C, IBCB, IBCA, IACB,     Process Name ( PID), Disk, Filename</div><div class="line"> DiskWrite,  368013044,  368013253,        209,        209, 0x00010000, 0x00b9523000,    3,    0,    0,    0,    0,    0,           System (   4),    0, C:\kernel.etl</div><div class="line"> DiskWrite,  368013304,  368013686,        382,        382, 0x00010000, 0x00b9533000,    3,    0,    0,    0,    0,    0,           System (   4),    0, C:\kernel.etl</div><div class="line"> DiskWrite,  368013728,  368013905,        177,        177, 0x00010000, 0x00b9543000,    3,    0,    0,    0,    0,    0,           System (   4),    0, C:\kernel.etl</div><div class="line"> DiskWrite,  368013947,  368014301,        354,        354, 0x00010000, 0x00b9553000,    3,    0,    0,    0,    0,    0,           System (   4),    0, C:\kernel.etl</div><div class="line"> DiskWrite,  368014344,  368014517,        173,        173, 0x00010000, 0x00b9563000,    3,    0,    0,    0,    0,    0,           System (   4),    0, C:\kernel.etl</div><div class="line"> DiskWrite,  368014563,  368014738,        175,        175, 0x00010000, 0x00b9573000,    3,    0,    0,    0,    0,    0,           System (   4),    0, C:\kernel.etl</div><div class="line"> DiskWrite,  368014782,  368014958,        176,        176, 0x00010000, 0x00b9583000,    3,    0,    0,    0,    0,    0,           System (   4),    0, C:\kernel.etl</div></pre></td></tr></table></figure></p><p>也可以用 <code>-overlap</code> 命令获得IO们的 overlap 信息.</p><p><img src="/images/20200617205359859_17129.png" alt="io overlap"></p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>这里介绍了一些很基本的使用, 使用是一个很简单的事情, 重要的是如何一点点的找到思路,做哪些检测,然后来找到问题, 后面应该会结合一些实际案例来讲解一下 performance tuning 的思路.</p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-16 19:06:00</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在做性能优化的时候， 由于服务器是 Windows, 而看到的好多工具， 像 DTrace 等都是只支持 Linux 的， 虽然 DTrace 微软官方有一个 &lt;a href=&quot;https://github.com/microsoft/DTrace-on-Windows&quot; </summary>
      
    
    
    
    
    <category term="performance" scheme="http://code4fun.me/tags/performance/"/>
    
  </entry>
  
  <entry>
    <title>十年回首[3/15]</title>
    <link href="http://code4fun.me/2020/06/15/2020summary/"/>
    <id>http://code4fun.me/2020/06/15/2020summary/</id>
    <published>2020-06-15T20:45:05.000Z</published>
    <updated>2025-06-13T10:54:27.234Z</updated>
    
    <content type="html"><![CDATA[<p>恍惚间, 在回首十年前的时候已经不是 200X 年了, 而已经是 201X 年了. 追溯十年前, 发生了很多变化. 最近有人和我打听我们高中的情况, 仔细一想发现原来已经毕业将近10年了, 人真是很容易失去对长时间的感知度.</p><p>作为从事互联网/IT相关工作的人，在这篇十年回忆中也就主要想一下这方面的内容。大学开始差不多也是真正接触这方面的时间，虽然由于邻居家就是电脑店，或者说是复印店，主要是做一些文字处理方面的工作，例如做个传单或者是印发传单，也是在他那里见到了类似于活字印刷的印刷机。很大个的一个机器，然后印刷的时候根据排版挑选出一个个的字，然后按照顺序排好。大概就是下图这个样子，</p><p><img src="/images/20200616220637962_3849.png" alt="印刷机"></p><p>另外当然就是玩各种游戏，他家还卖各种盗版光盘，所以也就很方便地玩了各种游戏，暴力摩托，暗黑破坏神等。还有一个麻将游戏也是常玩的，印象中是一个纯键盘操作的麻将，就是吃牌胡牌都要按某个键，不过当时一直纳闷一个事情为什么有的时候吃了牌就胡不成了，有的时候就可以胡成，所以当时基本上就完全门清胡牌，现在懂了日麻的规则后，感觉当时玩的大概率是日本麻将。当时的flash还是火的一塌糊涂的东西，flash的小游戏，印象最深的就是东成西就里面的那首 i love You 歌曲，做的一个小动画。当时完全被洗脑了，看了又看，不过今天尝试在网上搜了一搜发现找不到相关的内容了，估计是早就淹没在历史长河里了。另外就是当时比较流行的游戏，传奇、大话、梦幻，都玩过一点，不过这种需要买点卡的游戏，作为一个十分抠门的人，基本上都在需要付费的时候停止了。后来包括自己家里买了电脑，可以上网了，基本上一直是游戏机这种待遇过来的。到了高中，宿舍有个搞计算机竞赛的同学，才知道原来这个还可以写程序，当然作为当时搞数学竞赛的人，是有些觉得这个东西比较low。但没想到，多年之后自己竟然以此为生，且乐此不疲。</p><p>回想起，是怎么对计算机感起兴趣来的还真不好说。只记得，当初高考考了一个高不成低不就的分数，然后报志愿的时候就想了两个方向，数学和计算机。然而，阴差阳错的报了一个数学、计算机都不出名的学校。</p><p>入学之后，逐渐更加广泛地接触了计算机与互联网。仍记得当时的网购主要还是用亚马逊多一些，因为可以货到付款，一个很好记的 z.cn，没想到如今已经没落到大范围的业务都退出中国了。似乎这时候也是一个互联网飞速发展的年代，从最开始的不信任，到后面基本各种东西都在上面买。在13年初，在闲鱼上买了第一个东西，当时还没有进入中国的 Kindle，只能在一些盗版网站上下载电子书，然后在传过去，如今大部分网站都已经关闭了。</p><p><img src="/images/20200616221729681_14254.png" alt="闲鱼"></p><p>当时对于盗版大家还看得比较轻，学校PT盛行，各种热门资源的下载速度基本就是硬盘的读写速度，不限速的情况下就直接吧电脑卡死了。如今，大家对版权意识也比较强，PT站也就基本被限定的很死，以及4G，5G的发展，基本上都是在线看了。之前十分火的优酷和土豆两个网站合并了，然而现在也基本上听不到什么声音了，反而腾讯又入股爱奇艺，目前top 2的两个视频网站，基本上就走到了一起。</p><p>那时候最常用的浏览器chrome 在国内还是个偏小众的浏览器，如今已经是占有将近70%份额的 new evil。反而，我又投向了目前只有不到10%的 firefox，有的时候，会有一种比较别扭的想法，虽然自己的力量比较小，但还是近自己所能去组织世界变得更坏。这是一个来自维基百科的到2017年的市场份额图。</p><p><img src="/images/20200616223740434_16287.png" alt="statecounter"></p><p>聊天工具也从当初的QQ换到了如今的微信，虽然没有逃出腾讯的魔爪。中间大家通知的时候，还是用飞信，毕竟发短信不花钱，所以当初在学校想用的开心，就是只能用移动卡。不过，似乎当初的一些表达方式还是保留着，例如省略号的使用，只不过从12个点变到了现在的三个点。</p><p><img src="/images/20200616224608267_13407.png" alt="wechat moment"></p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-15 20:45:05</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;恍惚间, 在回首十年前的时候已经不是 200X 年了, 而已经是 201X 年了. 追溯十年前, 发生了很多变化. 最近有人和我打听我们高中的情况, 仔细一想发现原来已经毕业将近10年了, 人真是很容易失去对长时间的感知度.&lt;/p&gt;
&lt;p&gt;作为从事互联网/IT相关工作的人，</summary>
      
    
    
    
    
    <category term="随笔" scheme="http://code4fun.me/tags/随笔/"/>
    
  </entry>
  
  <entry>
    <title>我理解的搜索引擎[2/15]</title>
    <link href="http://code4fun.me/2020/06/10/search_engine/"/>
    <id>http://code4fun.me/2020/06/10/search_engine/</id>
    <published>2020-06-10T21:08:04.000Z</published>
    <updated>2025-06-13T10:54:27.290Z</updated>
    
    <content type="html"><![CDATA[<p>如果说移动化对于哪个互联网产业冲击最大, 无疑是搜索引擎, 从百度的市值就可以明显的看到,从之前BAT的王者, 到现在一个拼多多等于两度.<br><img src="/images/20200610211952148_26740.png" alt="baidu stock"></p><p>由于越来越多的内容封锁在自己的领域(以微信公众号为主), 以及轰轰烈烈的去Web化(必须用移动端APP访问才可以), 属于搜索引擎的时代似乎过去了, 但搜索的时代一直存在, 从微信的搜一搜到头条搜索再到阿里的神马搜索, 以及 Elastic Search 居高不下的股价, 无不说明着搜索一直在.</p><p><img src="/images/20200610212127327_10765.png" alt="elastic stock"></p><p>从一般意义上来说搜索引擎分为通用搜索引擎, 譬如 Google, Bing, Baidu之类的, 还有专用的搜索引擎, 例如各种应用内搜索. 对于搜索引擎的一个重点就是其索引的文档的数量多少, 只有索引了足够多的文档, 才可能根据用户输入的 query 得到最好的匹配. 但现在随着封闭化的出现, 通用搜索引擎所能索引到的好文档数量肯定是在减少.</p><p>从分布式的实现来说, 我们可以根据分片方式将其分成 term-shard 和 document-shard, 也就是在做分布式的时候, 我们是按照不同的 term 来划分, 还是按照不同的文档来划分. 前者肯定是更加省时的, 因为一次查询就可以把所有的文档都查询到, 但是其不易扩展, 当一个文档更新的时候, 所有的分片理论上都需要更新, 另外就是不稳定, 肯定有些词会相比起来更加热门一些, 所以到这些词的 query 也就更多一些, 而对这些机器的负载也就更大, 所以也就更不稳定. 当然我们可以给那些热门词, 更多的 replica 从而降低每天机器的负载, 但是由于一些突发时间造成某些词的搜索量急剧增加的情况是没法解决的, 例如 covid-2019, 这个词根本没法预测到. 所以现在大家都比较喜欢用的方法是 document-shard, 就是按照 document 来做分片, 每台机器上包含一定document的所有的 term, 这样一来每次 query 都要到每台机器上都去执行一遍, 然后再做一个合并才能得到比较好的结果, 相比起来这种的 cost 就会大一些, 当然相应的好处就是, 某台机器挂了, 对于 query 结果的影响比较小, 做更新和扩展也容易的多.</p><p><img src="/images/20200610213713675_12406.png" alt="covid google trends"></p><p>而在做查询的时候, 都用一个叫做 index 的文件. 一般使用的都是倒排表, 也即 inverted index. 正排就是指的那些从文档到其包含的 term 的映射关系, 而倒排就是反过来是从term 到文档的映射. 这样一个查询动作就变得很简单了, 就是找到相应的 term, 然后获得其所对应的所有的文档(一般称作 posting), 然后将这些posting 做一个与操作就好了. 做与操作的一个最简单的方法当然是直接用二进制的位操作, 但显然对于我们那么大数量文档情况是不划算的, 另外一个比较朴素的想法就是如果两边的posting都是排序的的话, 那么我们只需要遍历一遍就可以解决问题了.现在基本上也都是这么做的, 也就是对于整个index 包含的所有文档做一个排序, 然后依据此排序将其填到每个term的posting中去. 当然这里的排序就可以做一些操作, 通常我们可以把质量比较好的文档放在前面, 这是由于对于大部分查询来说, 我们不可能把所有匹配的结果都返回, 大概率会查一定程度就结束了, 所以按照质量排序的话, 质量好的文档就更可能被用户看到</p><p>一个文档能被用户看到, 首先就是需要被match出来. 普遍有两种match方法, 一种是朴素的方法, 就是根据 term 去查找包含这个term的文档, 然后做and/or 操作, 当然为了提高准确性, 在 match 之前, 我们可能对 term 做一些拼写检查和理解之类的, 例如把 microsft 修改成 microsoft 之类的. 但是有些情况下这种就会遇到一个比较尴尬的情形, 假设我们搜索 “某个人的生平”, 但是对于那些介绍了这个人但是文章中没有出现 “生平”字样的文档, 都无法正确的match到, 对于这种的话一般就是借助于神经网络将这些词和文档都转换成向量(vector), 然后做匹配. 另外目前还有一个比较难以处理的搜索的类型, 譬如”北京的餐馆, 不要日料”, 按照上面的搜索方式, 那么大概率查询结果都是北京的日料店, 这种只能依靠自然语言理解水平的进一步提高了.<br><img src="/images/20200610220445942_32398.png" alt="google result"></p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-10 21:08:04</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如果说移动化对于哪个互联网产业冲击最大, 无疑是搜索引擎, 从百度的市值就可以明显的看到,从之前BAT的王者, 到现在一个拼多多等于两度.&lt;br&gt;&lt;img src=&quot;/images/20200610211952148_26740.png&quot; alt=&quot;baidu stock&quot;</summary>
      
    
    
    
    
    <category term="search" scheme="http://code4fun.me/tags/search/"/>
    
  </entry>
  
  <entry>
    <title>小小的Flag, 六月连更15篇 [1/15]</title>
    <link href="http://code4fun.me/2020/06/09/flag/"/>
    <id>http://code4fun.me/2020/06/09/flag/</id>
    <published>2020-06-09T21:06:48.000Z</published>
    <updated>2025-06-13T10:54:27.237Z</updated>
    
    <content type="html"><![CDATA[<p>好久没有写博客了, 没想到最近新更新的一篇就是flag, 就如标题, 整个六月份要更15篇文章.</p><p>最近总是有一种奇怪的感觉, 那就是虽然感觉每天忙忙碌碌的, 但是似乎又什么都没有做, 虽然甚至因此重新开始时间记录, 用Toggle也记录了将近一个月的时间, 每天的纯工作时间都是在8小时以上, 但往回想的时候, 感觉什么都没有做, 这就让人有些焦虑了.</p><p>另外就是, TODO 里面记录了几篇想写的文章, 草稿箱里也放着好几篇甚至日期是19年的半成品. 所以想逼自己一把, 把这些补上.</p><p>另一方面,就是之前看了挺多书的, 也一直想写个读书笔记, 还有些想着等订的 Remarkable 到了再读的书, 本来以为六七月份就可以到了, 但是因为疫情,估计要到九月份才可以到了, 这也是比较蛋疼的一件事情. 所以不能往后再拖了, 这玩意就不知道要拖到什么时候了.</p><p>当然, 还有就是感觉最近学到或者了解到的新知识少了很多, 本来是打算学习一下日语, 但是背了几天平假名之后就放弃了. 也许逐渐用 Rust 代替 Python, 成为日常使用的语言不错, 虽然这个写起来肯定要痛苦很多, 但是就像刚开始从全拼过渡到双拼的时候也很痛苦, 但是习惯了也就很舒服了.</p><p>之前一直比较难的 Hexo 插图片问题, 突然想到既然现在用了 Github 的 Workflow 来自动部署, 由于现在再用 VNote 写博客, 而当复制一个images 过来的时候他会默认把图片放到 <code>images</code> 目录下, 那我直接把_post 目录下的 images 目录复制到 source 目录下, 然后在文章里面的路径前面加一个<code>/</code> 就可以了, 虽然这样本地预览会有问题, 但是影响也不太大.</p><p><img src="/images/20200609220110721_19129.png" alt="test"></p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-06-09 21:06:48</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;好久没有写博客了, 没想到最近新更新的一篇就是flag, 就如标题, 整个六月份要更15篇文章.&lt;/p&gt;
&lt;p&gt;最近总是有一种奇怪的感觉, 那就是虽然感觉每天忙忙碌碌的, 但是似乎又什么都没有做, 虽然甚至因此重新开始时间记录, 用Toggle也记录了将近一个月的时间, 每</summary>
      
    
    
    
    
    <category term="flag" scheme="http://code4fun.me/tags/flag/"/>
    
  </entry>
  
  <entry>
    <title>个人思绪汇集</title>
    <link href="http://code4fun.me/2020/05/09/note_note/"/>
    <id>http://code4fun.me/2020/05/09/note_note/</id>
    <published>2020-05-09T19:59:18.000Z</published>
    <updated>2025-06-13T10:54:27.289Z</updated>
    
    <content type="html"><![CDATA[<p>随着互联网技术的发展, 我们不断在网上留下各种线索, 可能在豆瓣里标记了一本刚看过的书, 又在微博上针对于当下热点新闻发出了自己的评论, 但是这些分散到四处, 就比较烦了. 好在 telegram channel 是一个比较开发的平台, 且 telegram 上有各种各样的 Bot. 这里借助 <a href="http://rsshub.app/" target="_blank" rel="external">RSSHub</a> 和 telegram 的 <a href="https://github.com/iovxw/rssbot" target="_blank" rel="external">rssbot</a> 将个人的相关信息都推送到 telegram channel 里面.</p><h2 id="RSSHub"><a href="#RSSHub" class="headerlink" title="RSSHub"></a>RSSHub</h2><p>此部分相当于是我们的基础, 里面有广大网友们开发的各种神奇的路由. 由于很多服务有反爬虫的设置, 所以我们为了更好的使用, 最好是自己在服务器上搭建.根据官方文档, 操作起来也比较简单, 这里就不赘述了. 这里有各种部署方案, <a href="https://docs.rsshub.app/install/" target="_blank" rel="external">install</a>.</p><p>以下是我用的几个RSS订阅：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Code4Fun (http://code4fun.me/atom.xml)</div><div class="line">Twitter Likes - tangtanghill (http://rsshub.app/twitter/likes/tangtanghill)</div><div class="line">hillshan 的 Twitter (http://rsshub.app/twitter/user/tangtanghill)</div><div class="line">zhangzhishan&apos;s GitHub repositories (http://127.0.0.1:1200/github/repos/zhangzhishan)</div><div class="line">zhangzhishan’s starred repositories (http://rsshub.app/github/starred_repos/zhangzhishan)</div><div class="line">呼呼呼山的微博 (http://127.0.0.1:1200/weibo/user/2622464373)</div></pre></td></tr></table></figure><h2 id="RSSBot"><a href="#RSSBot" class="headerlink" title="RSSBot"></a>RSSBot</h2><p>为了可以把单独的RSS信息聚合到一个 channel, 这里找了一个 telegram 的bot订阅所有信息, 然后推送到相关的 channel. Bot的话由于一直在断断续续的学习 Rust, 所以就选了个用 Rust 写的. 不过确实用起来还是很稳定. 由于官方, 直接由 build 好的, 直接下载下来二进制文件就可以了.</p><p>我们只需要根据<a href="https://core.telegram.org/bots#3-how-do-i-create-a-bot" target="_blank" rel="external">telegram 官方文档</a>, 建立一个bot, 然后设置几个相应的命令就好了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/rss       - 显示当前订阅的 RSS 列表</div><div class="line">/sub       - 订阅一个 RSS: /sub http://example.com/feed.xml</div><div class="line">/unsub     - 退订一个 RSS: /unsub http://example.com/feed.xml</div><div class="line">/export    - 导出为 OPML</div></pre></td></tr></table></figure><p><code>/sub</code> 命令除了直接订阅到Bot外, 当你把该Bot加到某个 Channel 之后, 可以通过 <code>/sub channelid url</code> 这个命令把通知直接订阅到某个 Channel中去.</p><p><img src="/images/20200509220713780_11570.png" alt="sub to channel"></p><p>这里当我们需要 ChannleID, 这个的获得也非常方便, 我们可以随便转一条 Channel 中的内容到 <a href="https://t.me/getidsbot" target="_blank" rel="external">@getidsbot</a> 即可, 结果如下图.</p><p><img src="/images/20200509220950847_16848.png" alt="getidsbot"></p><p>这里就可以得到我们的ID了. 然后就可以方便的把RSS更新 push 我们的 channel 了.</p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-05-09 19:59:18</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;随着互联网技术的发展, 我们不断在网上留下各种线索, 可能在豆瓣里标记了一本刚看过的书, 又在微博上针对于当下热点新闻发出了自己的评论, 但是这些分散到四处, 就比较烦了. 好在 telegram channel 是一个比较开发的平台, 且 telegram 上有各种各样的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>windows terminal configuration</title>
    <link href="http://code4fun.me/2020/05/09/windows%20terminal/"/>
    <id>http://code4fun.me/2020/05/09/windows%20terminal/</id>
    <published>2020-05-09T11:59:18.000Z</published>
    <updated>2025-06-13T10:54:27.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Split-pannel"><a href="#Split-pannel" class="headerlink" title="Split pannel"></a>Split pannel</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123; &quot;command&quot;: &quot;splitHorizontal&quot;, &quot;keys&quot;: [ &quot;alt+shift+-&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &quot;splitVertical&quot;, &quot;keys&quot;: [ &quot;alt+shift+plus&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &#123; &quot;action&quot;: &quot;moveFocus&quot;, &quot;direction&quot;:&quot;down&quot; &#125;, &quot;keys&quot;: [ &quot;alt+down&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &#123; &quot;action&quot;: &quot;moveFocus&quot;, &quot;direction&quot;:&quot;left&quot; &#125;, &quot;keys&quot;: [ &quot;alt+left&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &#123; &quot;action&quot;: &quot;moveFocus&quot;, &quot;direction&quot;:&quot;right&quot; &#125;, &quot;keys&quot;: [ &quot;alt+right&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &#123; &quot;action&quot;: &quot;moveFocus&quot;, &quot;direction&quot;:&quot;up&quot; &#125;, &quot;keys&quot;: [ &quot;alt+up&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &#123; &quot;action&quot;: &quot;resizePane&quot;, &quot;direction&quot;:&quot;down&quot; &#125;, &quot;keys&quot;: [ &quot;alt+shift+down&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &#123; &quot;action&quot;: &quot;resizePane&quot;, &quot;direction&quot;:&quot;left&quot; &#125;, &quot;keys&quot;: [ &quot;alt+shift+left&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &#123; &quot;action&quot;: &quot;resizePane&quot;, &quot;direction&quot;:&quot;right&quot; &#125;, &quot;keys&quot;: [ &quot;alt+shift+right&quot; ] &#125;,</div><div class="line">&#123; &quot;command&quot;: &#123; &quot;action&quot;: &quot;resizePane&quot;, &quot;direction&quot;:&quot;up&quot; &#125;, &quot;keys&quot;: [ &quot;alt+shift+up&quot; ] &#125;,</div></pre></td></tr></table></figure><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-05-09 11:59:18</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Split-pannel&quot;&gt;&lt;a href=&quot;#Split-pannel&quot; class=&quot;headerlink&quot; title=&quot;Split pannel&quot;&gt;&lt;/a&gt;Split pannel&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Use windbg to check memory leak</title>
    <link href="http://code4fun.me/2020/04/10/windbg%20for%20memory%20leak/"/>
    <id>http://code4fun.me/2020/04/10/windbg%20for%20memory%20leak/</id>
    <published>2020-04-10T11:50:34.000Z</published>
    <updated>2025-06-13T10:54:27.291Z</updated>
    
    <content type="html"><![CDATA[<p>From:<br><a href="http://blogs.msdn.com/b/paullou/archive/2011/06/28/debugging-managed-code-memory-leak-with-memory-dump-using-windbg.aspx" target="_blank" rel="external">http://blogs.msdn.com/b/paullou/archive/2011/06/28/debugging-managed-code-memory-leak-with-memory-dump-using-windbg.aspx</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Set symbols File &gt;&gt; Symbol File path</div><div class="line">SRV*c:\symbols*http://msdl.microsoft.com/download/symbols</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.reload</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.loadby sos clr or .loadby sos mscorwks!</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#optional</div><div class="line">!VerifyHeap</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Find largest GC Heapsize - leak is possible if &gt; 1gb or so</div><div class="line">!EEHeap</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Find type with the largest size</div><div class="line">!dumpheap -stat</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#put type here - find type with the largest size</div><div class="line">!dumpheap -type [TYPE]</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#put largest result here</div><div class="line">!do [ADDRESS]</div></pre></td></tr></table></figure><p>Loop above as needed, this is where it gets a bit fuzzy.  Look for repeating patterns and high threads</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#get a count of thread on the thing.  Find a high thread count</div><div class="line">!threads</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Pick a thread to look at it&apos;s stack - alternatively you can rum ~*kb for all thread stacks</div><div class="line">~[THREAD ID]s</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#show the stack</div><div class="line">Kb</div></pre></td></tr></table></figure><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2020-04-10 11:50:34</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;From:&lt;br&gt;&lt;a href=&quot;http://blogs.msdn.com/b/paullou/archive/2011/06/28/debugging-managed-code-memory-leak-with-memory-dump-using-windbg.asp</summary>
      
    
    
    
    
    <category term="wiki" scheme="http://code4fun.me/tags/wiki/"/>
    
  </entry>
  
  <entry>
    <title>Windows sysinternals tools</title>
    <link href="http://code4fun.me/2019/12/25/sysinternals/"/>
    <id>http://code4fun.me/2019/12/25/sysinternals/</id>
    <published>2019-12-25T09:58:00.000Z</published>
    <updated>2025-06-13T10:54:27.290Z</updated>
    
    <content type="html"><![CDATA[<p>微软在官网上提供了一系列的具有多种用途的小工具, 这里就罗列介绍一部分有用或者有意思的小工具, 详细内容可以参考<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/" target="_blank" rel="external">官方主页</a>. 分类也基本参照官网, 但是只选取了其中有意思的部分.</p><h2 id="文件与硬盘相关"><a href="#文件与硬盘相关" class="headerlink" title="文件与硬盘相关"></a>文件与硬盘相关</h2><h3 id="disk-usage"><a href="#disk-usage" class="headerlink" title="disk usage"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/du" target="_blank" rel="external">disk usage</a></h3><p>一个十分简单的命令行工具,给定路径可以迭代输出路径下所有文件夹的大小. 也可以不迭代或者是给定迭代层数.<br><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577343723_20191225165345511_27540.png" alt="du"></p><h3 id="contig"><a href="#contig" class="headerlink" title="contig"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/contig" target="_blank" rel="external">contig</a></h3><p>为了优化性能, 我们会对硬盘做一些去碎片化的工作. 而conitg这个工具则主要是针对单个文件的.</p><p>Contig is a single-file defragmenter that attempts to make files contiguous on disk. Its perfect for quickly optimizing files that are continuously becoming fragmented, or that you want to ensure are in as few fragments as possible.</p><h3 id="pendmove"><a href="#pendmove" class="headerlink" title="pendmove"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/pendmoves" target="_blank" rel="external">pendmove</a></h3><p>用了 <code>movefile</code> 命令可以使得这次操作会在下次启动的时候生效, 而<code>pendmoves</code>则可以输出所有待move的文件.</p><h2 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h2><h3 id="whois"><a href="#whois" class="headerlink" title="whois"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/whois" target="_blank" rel="external">whois</a></h3><p>get whois information from whois.markmonitor.com, for example, use <code>whois64.exe bing.com</code> can get information below.<br><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577343717_20191225163408852_17579.png" alt="whois"></p><h3 id="pipelist"><a href="#pipelist" class="headerlink" title="pipelist"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/pipelist" target="_blank" rel="external">pipelist</a></h3><p>列出所有的 named pipes.</p><h2 id="进程相关"><a href="#进程相关" class="headerlink" title="进程相关"></a>进程相关</h2><h3 id="vmmap"><a href="#vmmap" class="headerlink" title="vmmap"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/vmmap" target="_blank" rel="external">vmmap</a></h3><p>分析给定的进程的虚拟和物理内存, 可以看到每一类虚拟内存和实际物理内存的大小.<br><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577343726_20191225170315138_31452.png" alt="vmmap"></p><h3 id="pstools"><a href="#pstools" class="headerlink" title="pstools"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/pstools" target="_blank" rel="external">pstools</a></h3><p>pstools 是一个集合, 里面包含各种工具, 主要是这些工具可以方便的在远程机器上执行, 只需要给定机器名和登录所需的用户名密码. 一些参见下面: </p><ul><li><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psexec" target="_blank" rel="external">psexec</a> - execute processes remotely</li><li><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psfile" target="_blank" rel="external">psfile</a> - shows files opened remotely</li><li>psgetsid - display the sid of a computer or a user</li><li>psinfo - list information about a system</li><li>psping - measure network performance</li><li><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/pskill" target="_blank" rel="external">pskill</a> - kill processes by name or process id</li><li><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/pslist" target="_blank" rel="external">pslist</a> - list detailed information about processes</li><li>psloggedon - see who’s logged on locally and via resource sharing (full source is included)</li><li>psloglist - dump event log records</li><li>pspasswd - changes account passwords</li><li>psservice - view and control services</li><li>psshutdown - shuts down and optionally reboots a computer</li><li>PsSuspend - suspends processes<h3 id="process-explorer"><a href="#process-explorer" class="headerlink" title="process explorer"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer" target="_blank" rel="external">process explorer</a></h3>一个很强大的进程管理器, 可以把进程以树的形式展示出来.<br><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577343728_20191226150020705_11738.png" alt="process explorer"><h2 id="安全相关"><a href="#安全相关" class="headerlink" title="安全相关"></a>安全相关</h2><h3 id="sysmon"><a href="#sysmon" class="headerlink" title="sysmon"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon" target="_blank" rel="external">sysmon</a></h3>System Monitor (Sysmon) 是一个windows service. 安装后会输出详细的进程创建, 网络连接等信息.<h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><h3 id="rammap"><a href="#rammap" class="headerlink" title="rammap"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/rammap" target="_blank" rel="external">rammap</a></h3>可以利用此工具看到详细的不同内存的统计信息, 每个文件映射到内存中的size,乃至每一个物理内存对应哪些实际文件, 或者某文件在物理内存中的索引.<br><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577343724_20191225170051070_7770.png" alt="rammap"><h2 id="杂"><a href="#杂" class="headerlink" title="杂"></a>杂</h2><h3 id="testlimit"><a href="#testlimit" class="headerlink" title="testlimit"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/testlimit" target="_blank" rel="external">testlimit</a></h3>一个可以用来占据内存,handles, processes, threads等的工具. 需要搭配psexec使用, 例如: <code>.\PsExec.exe -sid Testlimit64.exe -r  1000 -c 1</code><br><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577343727_20191225174041767_2182.png" alt="testlimit"></li></ul><p>reserve 1000 MB memory, reverse次数为1.</p><h3 id="BlueScreen-Screen-Saver"><a href="#BlueScreen-Screen-Saver" class="headerlink" title="BlueScreen Screen Saver"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/bluescreen" target="_blank" rel="external">BlueScreen Screen Saver</a></h3><p>传统windows崩溃页面作为屏保.</p><h3 id="zoom-it"><a href="#zoom-it" class="headerlink" title="zoom it"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/zoomit" target="_blank" rel="external">zoom it</a></h3><p>利用快捷键放大屏幕, 然后也可以做一些标注.</p><h3 id="hex2dec"><a href="#hex2dec" class="headerlink" title="hex2dec"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/hex2dec" target="_blank" rel="external">hex2dec</a></h3><p>十分方便的十进制与16进制转换,参看截图.</p><p><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577343720_20191225164242847_4264.png" alt="hex2dec"></p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2019-12-25 09:58:00</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;微软在官网上提供了一系列的具有多种用途的小工具, 这里就罗列介绍一部分有用或者有意思的小工具, 详细内容可以参考&lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/&quot; target=&quot;_blank</summary>
      
    
    
    
    
    <category term="windows" scheme="http://code4fun.me/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>In memory index</title>
    <link href="http://code4fun.me/2019/07/15/in%20memory%20index/"/>
    <id>http://code4fun.me/2019/07/15/in%20memory%20index/</id>
    <published>2019-07-15T11:48:29.000Z</published>
    <updated>2025-06-13T10:54:27.287Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Some-think"><a href="#Some-think" class="headerlink" title="Some think"></a>Some think</h2><p>用skip list存储posting的话是可以实现方便的添加和删除元素的,其效率的话也算比较高,相当于每次做一个二分查找.但是这样的话可能空间占用会多一些.</p><p>根据理论计算是对于<code>n</code>个元素的一个skiplist 需要少于<code>2n</code>个node 就可以. 由于一个node节点是原来的4倍(由于一个地址长度是8,然后一个int 是4, 那么对齐后就是16),所以整体来说就是8倍.</p><p>An Exploration of Postings List Contiguity in Main-Memory Incremental Indexing 这篇文章介绍了如何在内存中存放postings, 如果在内存中隔得比较远的话,会影响性能,但是如果连续的话,需要一些控制,这里给了一个 tradeoff. 也许对于目前也有一些指导意义.</p><p>Fast Incremental Indexing for Full-Text Information Retrieval 文章提到说，在他们的情形中 over 90% of the inverted lists are less than 1000 bytes (in their compressed form), and account for less than 10% of the total inverted file size. Furthermore, nearly half of all lists are less than 16 bytes. This means that many inverted lists will never grow after their initial creation. Therefore, they should be allocated in a space efficient manner。 这个启发我们在做设计的时候要首先考虑 index 的内容等特性。文章中设计的inverted list不是 a single object of the exact size，而是 using a range of fixed size objects，here the sizes range from 16 to 8192 bytes by powers of 2 (i.e., 16, 32, 64, …, 8192). 在create的时候，分配可以装下的最小的 size。当超过这个size之后，分配一个下一档的内存，然后复制过去，free掉当前的内存。当达到最大object size，不是再扩大这个内存size，而是生成一个 8192的 linked list object，然后把这个的尾指针之过去。感觉在一定程度上类似于STL里面的Vector的设计。<br>The largest objects are each allocated intheir own physical segment and managed by a large object pool. The smallest (16 byte) objects are stored in 4 Kbyte physical segments, 255objectspersegment, and managed by a small object pool.  The remaining objects are stored in 8 Kbyte physical segments, where each segment stores objects of only one size, and contains as many objects of that size as will fit. These objects are managed by a medium object pool。</p><p>是否需要支持delete document. 或者说现在对于document的delete是通过block doc完成的吗?</p><p>理论上来说, in memory index的部分应该是比较 hot 的doc,或者说是 static rank 分数比较高的那部分doc.</p><p><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577672046_20190617144358589_6490.png" alt=""></p><p>看了一个google 的设计文档,发现我们的设计和他们很相似啊. <a href="https://static.googleusercontent.com/media/research.google.com/en//people/jeff/WSDM09-keynote.pdf" target="_blank" rel="external">google talk about index</a></p><p>规模是在设计中必须考虑的一个问题.</p><h2 id="in-memory-index-format-from-papers"><a href="#in-memory-index-format-from-papers" class="headerlink" title="in memory index format from papers"></a>in memory index format from papers</h2><p>Here are several papers I read about in-memory index structure. Nearly all paper considered on posting list dynamic extending, but in which kind of method, I think we need to do some experiments according to our index. And posting lists are implemented as arrays for data continuous.</p><h3 id="Earlybird-Real-Time-Search-at-Twitter"><a href="#Earlybird-Real-Time-Search-at-Twitter" class="headerlink" title="Earlybird: Real-Time Search at Twitter"></a>Earlybird: Real-Time Search at Twitter</h3><p>This paper designed an in-memory structure optimized for single-writer, multiple-reader. The index can be divided into:</p><ul><li>Term dictionary(a simple hash table,  uses open addressing on primitive arrays)</li><li>Term data(held in parallel arrays)<ul><li>number of postings for the term</li><li>pointer to the tail of the postings list</li></ul></li><li>Active index<ul><li>Each posting is a 32-bit integer(24 bits for document-id, 8 for term position)</li><li>Stored in an array, cache friendly</li><li>allocation of space for postings lists.<ul><li>Postings lists vary significantly in size, since term and document frequencies are Zipfian</li><li>create four separate “pools” for holding postings.</li><li>In each pool, the slice sizes are fixed: they are 2^1, 2^4, 2^7, and 2^11</li><li>The first time a term is encountered, a postings list is created in the first pool (i.e. holds 2 elements)</li><li>Each slice (except 2^1) reserves the first 32-bits for a pointer to the previous slice</li></ul></li></ul></li><li>Concurrency<ul><li>Limit to a single writer per index segment for simplicity</li><li><code>maxDoc</code> is used to divide write and read process. Readers ignore docs encountered greater than maxDoc.</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577241237_20190711110910258_3754.png" alt="slice structure"></p><p><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577241239_20190711110935498_13509.png" alt="concurrency"></p><p>After achieve to a threashold, convert index from a write-friendly structure into an optimized read-only structure. Postings are divided into “long” and “short”(less than 1000). For long postings, use a block-based compression scheme similar in spirit to PForDelta and the Simple9 family of techniques.</p><h3 id="Fast-Incremental-Indexing-for-Full-Text-Information-Retrieval"><a href="#Fast-Incremental-Indexing-for-Full-Text-Information-Retrieval" class="headerlink" title="Fast Incremental Indexing for Full-Text Information Retrieval"></a>Fast Incremental Indexing for Full-Text Information Retrieval</h3><p>This paper mentioned in their case, over 90% of the inverted lists are less than 1000 bytes (in their compressed form), and account for less than 10% of the total inverted file size. Furthermore, nearly half of all lists are less than 16 bytes. This means that many inverted lists will never grow after their initial creation. Therefore, they should be allocated in a space efficient manner。It designed an inverted list struct using a range of fixed size objects, not a single object of the exact size，here the sizes range from 16 to 8192 bytes by powers of 2 (i.e., 16, 32, 64, …, 8192). 在create的时候，分配可以装下的最小的 size。当超过这个size之后，分配一个下一档的内存，然后复制过去，free掉当前的内存。当达到最大object size，不是再扩大这个内存size，而是生成一个 8192的 linked list object，然后把这个的尾指针之过去<br>The largest objects are each allocated intheir own physical segment and managed by a large object pool. The smallest (16 byte) objects are stored in 4 Kbyte physical segments, 255objectspersegment, and managed by a small object pool.  The remaining objects are stored in 8 Kbyte physical segments, where each segment stores objects of only one size, and contains as many objects of that size as will fit. These objects are managed by a medium object pool。</p><h3 id="An-Exploration-of-Postings-List-Contiguity-in-Main-Memory-Incremental-Indexing"><a href="#An-Exploration-of-Postings-List-Contiguity-in-Main-Memory-Incremental-Indexing" class="headerlink" title="An Exploration of Postings List Contiguity in Main-Memory Incremental Indexing"></a>An Exploration of Postings List Contiguity in Main-Memory Incremental Indexing</h3><p>This paper put all index into memory, but they only do some experiment for index speed and query evaluation after indexing the entire collection. It has no work in serve and index at the same time.  The structure is:</p><p><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577241242_20190711112707467_4053.png" alt="index structure"></p><p>Data is first added into each buffer map. When the docid buffer for a term fills up,  “flush” all buffers associated with the term, compressing the docids, term frequencies, and term positions into a contiguous block of memory as follows:<br><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577241244_20190711113633195_15153.png" alt="block package"></p><p>D represents data for docid(compressing using PForDelta, blcok size b = 128), F represents TF, P_i for postion.</p><p>To achieve increasingly better approximations of contiguous postings lists, this paper propose a approach of changing the memory allocation policy for the buffer maps.<br>Whenever the docid buffer for a term becomes full (and thus compressed and flushed to the segment pool),  expand that term’s docid and tf buffers by a factor of two (still allowing the term positions buffer to grow as long as necessary). This means that after the first segment of a term is flushed, new docid and tf buffers of length 2b replace the old ones; after the second flush, the buffer size increases to 4b, and then 8b, and so on. To prevent buffers from growing indefinitely, we set a cap on the length of docid and tf buffers. That is, if the cap is set to 2^mb, then when the buffer size for a term reaches that limit, the buffer is broken down into 2^m segments, each segment is compressed as described earlier, and all 2^m segments are written at the end of the segment pool contiguously.</p><h3 id="LSII-An-indexing-structure-for-exact-real-time-search-on-microblogs"><a href="#LSII-An-indexing-structure-for-exact-real-time-search-on-microblogs" class="headerlink" title="LSII: An indexing structure for exact real-time search on microblogs"></a>LSII: An indexing structure for exact real-time search on microblogs</h3><p>Log-Structured Inverted Indices (LSII), is similar in spirit to the Log-Structured Merge-Tree: It contains a sequence of inverted indices I0,I1,…,Im with exponentially increasing sizes, as illustrated in Figure below. When a new document arrives, it is first inserted into the smallest inverted index I0 – this incurs little overhead given the tiny size of I0. When the number of documents indexed by I0 exceeds a certain threshold, we merge the entries of I0 into I1, and we empty I0; in turn, the entries in I1 are flushed into I2 when I1 gets to a certain size, and so on. This considerably reduces the amortized update cost per document, since (i) each document can be only involved in a small number of index mergers, and (ii) the index mergers can be performed in a much more efficient manner than inserting all documents into an inverted index one by one.<br>For each inverted index Ii, it maintains a hash table that maps the document id indexed by Ii to a triplet$<sig(d),vd,tsd>$. Implement the posting lists in $I_1, …, I_m$ as sorted arrays.<br>During query processing, all inverted indices are scanned simultaneously using the Threshold Algorithm.</sig(d),vd,tsd></p><p><img src="https://raw.githubusercontent.com/zhangzhishan/blogpics/dev/1577241245_20190711135448028_21865.png" alt="structure"></p><h3 id="On-main-memory-flushing-in-microblogs-data-management-systems"><a href="#On-main-memory-flushing-in-microblogs-data-management-systems" class="headerlink" title="On main-memory flushing in microblogs data management systems"></a>On main-memory flushing in microblogs data management systems</h3><p>Focus on how to flush to disk. This paper proposes kFlushing policy that exploits popularity of top-k queries in microblogs to smartly select a subset of microblogs to flush. kFlushing is mainly designed to increase memory hit ratio. To this end, it identifies and flushes in-memory data that does not contribute to incoming queries.</p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2019-07-15 11:48:29</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Some-think&quot;&gt;&lt;a href=&quot;#Some-think&quot; class=&quot;headerlink&quot; title=&quot;Some think&quot;&gt;&lt;/a&gt;Some think&lt;/h2&gt;&lt;p&gt;用skip list存储posting的话是可以实现方便的添加和删除元素的,</summary>
      
    
    
    
    
    <category term="search" scheme="http://code4fun.me/tags/search/"/>
    
  </entry>
  
  <entry>
    <title>台湾游记</title>
    <link href="http://code4fun.me/2019/07/03/taiwan/"/>
    <id>http://code4fun.me/2019/07/03/taiwan/</id>
    <published>2019-07-03T16:42:22.000Z</published>
    <updated>2025-06-13T10:54:27.290Z</updated>
    
    <content type="html"><![CDATA[<p>这种游记当然是按时间顺序走起，也可以算是个流水账。在考虑到去哪之前，让人纠结了很久。从去日本、巴厘岛、台湾等经过多方选择，最终以可以方便的说汉语这个原因，选择了去台湾。去了之后，发现讲起话来真的舒服了很多，那边的人也都很热情，很不错。另外，那声谢谢的语调真的非常有意思。</p><h2 id="2019-06-22-周六"><a href="#2019-06-22-周六" class="headerlink" title="2019-06-22 周六"></a>2019-06-22 周六</h2><p>今天从苏州开始出发，先做火车到虹桥火车站，然后从虹桥做地铁到浦东机场，然后托运行李，安检，过海关，一路很快很方便。</p><p>飞机直接到桃园机场，然后直接拿国内的银联卡取现，招行的5‰的手续费，10元起步，取了一万新台币，大概12元左右的新台币，之前为了免除境外取现的手续费，还办了一张成都银行的金卡，不过临出发前找了很久也没有找到，一想，大概率不用取很多现金，所以也就罢了。</p><p>取完现金去买悠游卡，旁边有义工，态度十分赞。不过也指出了一个问题，由于打算是到了直接来台南，以及出发前没怎么做攻略，也就直接想当然的买了台北到台南的高铁。然后事实上，离机场比较近的是桃园高铁站，且是在从台北到台南的必由之路上，所以情况就比较尴尬的是要先北上，然后再做高铁南下。幸好时间比较充足，也就如此了。</p><p>经过一番折腾在晚上10点多到了台北，然后把行李放到酒店，开始去外面吃夜宵。逛了两家店，吃了担仔面，蒜蓉猪脚和猪心乌冬面。不得不说这边的饭的量都比较mini，不过也正好可以多尝试几样。这边的天气真的是闷热，这么晚在路上走了一段都是一身汗，路边全家一瓶肥宅快乐水真是爽。吃完回到住处已经12点多了，不过还是看了一会电视。没想到台湾地方虽然不大，电视台还挺多的，从头到尾扫了一遍估计有100多个台，虽然其中会有一些国外的像BBC，德国之声之类的。</p><h2 id="2019-06-23-周日"><a href="#2019-06-23-周日" class="headerlink" title="2019-06-23 周日"></a>2019-06-23 周日</h2><p>第二天，住的饭店早餐是给的旁边711的60台币的券以及旁边咖啡店的一张饮品券，也蛮有意思的。随便拿了几样结果正好118，也是够神奇的。然后就开始了早餐觅食。台南应该算是一个比较小的城市，完全可以靠步行。路两边的高的楼也不多，大部分只有三四层这样子。有一些商场的楼会很高，例如14、5层，逛了几家商场感觉这边商场和国内的布局完全不一样，很高但是单层面积很小，感觉基本上扶梯在最中间，然后周围一圈大概有四五家店这样子。<br>看路边的广告牌，有挺多补习班之类的，从国小到高中。除了这些之外，还有一种国内不常见的，是公职考试培训，像什么去电力、水利系统之类的，然后还配上类似是考取公职，赢取白富美，走上人生巅峰之类的广告语。早饭吃了哬仔煎和一些记不清的东西了。除此之外，街边很多卖槟榔的店，感觉那边的民众对槟榔热情很高啊。不过比较搞笑的是，在某个路边有个宣传画上面有个介绍什么四大坏人或什么记不太清了的，竟然是毒品、槟榔、烟、酒。难道这个真的是会上瘾的?</p><p>中午吃了个海鲜丼，和国内平时吃的牛丼差别还挺大的。逛了逛商场，然后就转火车到新左营，然后从那里做垦丁快线前往垦丁。到达垦丁大概是傍晚，去定的酒店入住之后，出门就逛了起来。垦丁大街也是蛮有意思的，晚上的时候，相当于一整条街上路两边都是小摊，各种店，很多店都写着支持微信或者支付宝，扫了个境外红包还可以。</p><h2 id="2019-06-24-周一"><a href="#2019-06-24-周一" class="headerlink" title="2019-06-24 周一"></a>2019-06-24 周一</h2><p>总体来说台湾的天气真是随性，天气预报基本上没有准过。看每天都预告着第二天全是雨，并且概率可以到90%多，结果早上出门一看，大太阳晒着，然后等一会可能突然天降瓢泼大雨，然后雨下了没有十分钟，又停了。</p><p>中午吃过饭，去租了个电动车，由于没有国际驾照，所以只能租了个电动车，对于多年的电动车老司机来说，骑起来还是没有任何问题的。不过他们那边电瓶竟然是一整块的方式，虽然也没有问出工作人员是48V还是60V的来，不过仪表上电量最高的时候是50V，也许那边的规格和国内是有一些不同的。</p><p>由于是下午租的车，而垦丁从垦丁大街那边可以分成两个部分，西边和东边。这一天就先去西边，老板还热情的给了具体的路线图，并且说可以先去恒春古镇吃好吃的。开始出发就过去了，骑了大概六七公里的时候，突然意识到一个问题，我们刚吃过饭，然后也不想吃东西，所以好像就没有什么去恒春的必要了，然后就原路折回去了。说起来还有些小尴尬。大晴天，也就意味着另一件事，天气很晒。去海边当然也就去了沙滩，周围有人在玩水上项目，快艇什么的，感觉所有的海边的都是这样的。海滩看多了，就会发现这个基本上都大同小异，很难再让人有新鲜的感觉。不过沙滩上有个人在和狗玩还挺有意思的，随着浪过来，把狗带到水里吓他或者是叫狗过去，看狗一边要去追主人，一边又怕水，还蛮有意思的。在之前做高铁和快线的时候，新开发出了手机上的延时摄影自动合成视频的功能。发现很有意思，然后打算录一段站在沙滩上，然后海浪不断把沙子冲走人不断往里面陷的视频，不过由于浪慢慢变大，没录多久就结束了，该想法也就以失败告终。</p><p>晚饭去了大众点评上评价很高的炒菜店，菜确实还不错。夜宵去买了租车的人推荐的卤味和花枝丸，卤味确实不错，买了一份心肝宝贝（鸭心，鸭肝等）以及几个鸭翅，鸭翅非常好吃，不过鸭心等有些咸以及份有些大还是剩了一些。</p><h2 id="2019-06-25-周二"><a href="#2019-06-25-周二" class="headerlink" title="2019-06-25 周二"></a>2019-06-25 周二</h2><p>由于电动车是租了24小时，也就是这一天需要在13点之前把卡还回去以及是还需要退房，所以这一天起的还是比较早的。今天是走垦丁的东线，讲道理东线比西线的风景要好很多，并且早上出门的时候下了一场雨，所以还挺凉快的，整体感觉也会变好。不过早上还是出了个小插曲，出门的时候把手机拉在酒店了，由于今天退房，所以又回去拿了。<br>然后就是再次踏上走东线的行程，目标是前往台湾最南点，然后折回来。在这条路上见到了很多不一样的石头的海滩，之前总是去的都是周围是沙滩的那种。黑黑的岩石配上雪白的浪花，在这里第一次感受到乱石穿空，惊涛拍浪，卷起千堆雪的感觉。并且看提示说，周围有寄居蟹，找了半天也没有找到，只找到了一些普通的在岩石里面的小螃蟹。并且之前在大路上的时候，还看到有牌子写着，陆蟹出没，减速慢行的标识，当然也没有找到。<br>然后一路前进到快到台湾最南点的地方的时候，有个灯塔，本来想上去，在入口前准备停车的时候，结果发现钱包不见了，后来怀疑应该是拉在箱子里了。所以也只得作罢。<br>到了台湾最南点后发现其实就是一个小的标识物和探出去的一小块地方，不过还是挺多人慕名过去的，这就让我想起了那个东极岛，虽然说不是最南端，但是仗着一个好名字，还是游客甚多。<br>然后从那边回来之后，就还车、取钱包、又去了昨天那家吃了一次饭。没什么可表的。然后又做垦丁快线回到新左营，从新左营做高铁到了台北。<br>到台北后发现台北下着瓢泼大雨，开始本来打算做出租去住的酒店，结果转了一圈没有找到怎么过去，于是就只得走过去了，好在有雨衣。快到的时候，发现原来有地下街可以从高铁站一直通过来，唉，白淋了雨了。<br>住的酒店就在西门町附近，这也就理所当然的晚上就去那边逛了。在台南和垦丁待了几天后，到了台北真真切切的感觉是又回到了大城市，四处是高楼大厦、人来车往。不知道为何感觉西门町是一个二次元很严重的地方，周围的广告都是一个阴阳师类似的游戏的广告，以及大侦探皮卡丘、名侦探柯南绀青之拳电影的宣传。在某条街头还一直停着一辆献血车，车上就像之前在微博上看到的日本的献血车一样，车身上都贴着二次元角色的形象，有些造型比较像前一段时间比较火的工作细胞上的工作人员的造型，开始还以为所有的献血车都是这样，不过后来在士林附近又看到一辆，就是很传统、很普通的样子。<br>在这边，当然又是逛吃逛吃。吃了一个排队比较多的线粉，在他旁边看到一个臭豆腐，然后也去吃了，发现这边的臭豆腐和国内的差别还挺多的，油炸的做法一样，但是浇的汁是不同类型的，除此之外还会在上面放一些酸酸甜甜的泡菜，对于解腻还是很有帮助的。在此之后又吃了个别家的臭豆腐，都没有这家的好吃，所以后来又在他家又买了一份。</p><h2 id="2019-06-26-周三"><a href="#2019-06-26-周三" class="headerlink" title="2019-06-26 周三"></a>2019-06-26 周三</h2><p>来了台湾，都有一个必须去的地方，故宫博物院。不过里面没有想象中的大，然后冷气很足。当然去看了传说中的白菜和五花肉。除此之外还有许多清朝皇帝用的一些朝珠、玉器什么的，众多名贵的东西。里面见到两个很有意思的讲解人员，虽然他们也是给听讲解的人员发了耳机，不过他们说话的声音还是比较大的，旁边的人也可以跟着蹭一蹭听。一个貌似当着日本人面，在讲解某个文物的历史的时候，提到日本人都比较贼，然后又说他们听不懂他说啥。另一个就是旗帜鲜明的支持一个中国，不知道旁人有什么感受。在故宫旁边吃了个牛肉面，只有一句话真贵。<br>从故宫出来，然后又做捷运准备去淡水渔人码头看日落。在快到淡水捷运站的时候，突然看到有个红树林自然保护区，并且我们时间还很充足，就打算去那里逛一逛，不过比较尴尬的是里面的步道在维修，所以只能走稍远一些的路边。周边各种树木林立，环境还是很不错，不过有水有树就导致了一个问题，有很多蚊虫，感觉走了没有多久就被咬惨了。然后再做了三四公里路之后，后来遇到一个出口，就从那出去准备做公交车过去，公交做了一段到了一个什么红毛城，就下车去那里看，然后发现手机拉在车上了。幸好手机开了国际漫游，是可以接到电话的，于是赶紧让同学给从国内打电话过来，然后知道给放在哪个地方了，就再做公交去到那里，如愿取到手机。这番大概折腾了一个多小时，于是赶紧去看日落的地方，好在及时赶到了。但是当天天气还是不太好，站在情人桥上看东边乌云已经厚得赶紧要掉下来了，不过西边还是有一部分没有云的，也比较奇怪，但好处是还可以在一定程度上看到日落。虽然最终没有看到太阳掉到海里去，染红大海和天空的场景，不过由于场景的空旷，以及云层不算特别厚，日落还是可以的。不过用GoPro拍出来的照片，完全感觉不到太阳，反而是用手机拍的还不错。<br>看完日落，这一天的行程也就结束了。由于看日落的地方离捷运站还有一定的距离，所以就打车过去的，然后发现这边打车还是蛮贵的，很短的距离就大概200台币，也就是40多人民币。想起之前在泰国的时候，天天打车，从来不做公共交通的情况，而去欧洲的时候，基本不敢打车的境遇。感觉是随着经济发展程度的提高，公共交通的费用会越来越低，而像出租这种却会越来越高。另一方面，刷卡支付也是可以鉴定一个国家发展的标志，当然我国情况除外。在欧洲的时候以及这次来台湾，基本上没有怎么取现金，除了小摊，大部分都是可以直接刷卡支付。而像泰国，大部分地方都是只能付现金，所以有为了找一个支持银联的ATM，而尝试10多台ATM的历史。</p><h2 id="2019-06-27-周四"><a href="#2019-06-27-周四" class="headerlink" title="2019-06-27 周四"></a>2019-06-27 周四</h2><p>之前以为是在台北的行程只有三整天的时候，觉得时间很赶，可是后来发现竟然是四整天的时候，发现原来时间是这么充裕，所以基本上每天就很少的事情了。<br>今天中午出门，经过一番考虑决定搭公交去台北101大楼。结果，尴尬的错过了第一辆公交车，当时坐在那等公交顺其自然的玩起了手机，然后不一会就看着面前一辆公交飞驰而过，过后发现竟然就是我们等的那一班。台湾的公交车，也属于那种，下车需要按一个下车铃这种，如果到某个站点没有人按，且公交站没人招手的话，车就飞驰过去了。后来雨又下大了，等到上了下一班公交车结果又停了，尴尬。在101买了一些回国的伴手礼。<br>然后坐捷运去猫空缆车，缆车分为水晶缆车和普通缆车，水晶缆车的底部是透明的，可以直接看到下面的郁郁葱葱的绿树。不过由于这个空间比较小，且你是坐在旁边的座位上，所以感觉不是很吓人。缆车慢慢悠悠的，很长，恰好可以看到台北市区的整体。恰好又看了一次日落。</p><h2 id="2019-06-28-周五"><a href="#2019-06-28-周五" class="headerlink" title="2019-06-28 周五"></a>2019-06-28 周五</h2><p>早上，吃过早饭之后，去买茶叶和顺便寄明信片。去了他们邮局，发现里面除了传统的邮寄业务之外，也有一部分银行的业务，应该是类似国内的邮政储蓄一样。不过尴尬的发现这边只能买邮票寄明信片，这边卖的明信片都是纯白的那种，而我手头只有一张前天在诚品书店买的明信片。工作人员说可以去书局去买，而且竟然会根据明信片的大小，需要不同价值的邮票，小的需要6台北，而大的需要9台北。<br>地图一搜，发现附近还真有一家书局。去了之后发现还真蛮大的，一共四层，除了书之外还卖各种卡片、文具以及小玩意。于是又开心的逛了起来，发现这边的书还真的蛮多的。不过和诚品书店还是有一些不一样的，诚品那边感觉可能是更注重一些书的质量，会有一些比较有深度的书，或者一些外文原版书，当然也包括很多政治方面的书。而这个书局，感觉应该是更注重书的畅销度，轻小说、日漫有很大一篇，以及各种考试相关的，根本没有什么政治或者外文之类的。另外，还偶然间发现了一个日本著名演员高桥圣子的写真集。<br>下午的话就去了这边著名的泡汤的地方，新北投。泡汤休息的一下午。</p><h2 id="2019-06-29-周六"><a href="#2019-06-29-周六" class="headerlink" title="2019-06-29 周六"></a>2019-06-29 周六</h2><p>A shopping day, all kinds of 化妆品。</p><h2 id="2019-06-30-周日"><a href="#2019-06-30-周日" class="headerlink" title="2019-06-30 周日"></a>2019-06-30 周日</h2><p>由于是从松山机场走，所以用不成龙腾的贵宾室，并且讲道理机场还是真的小，回去的飞机也比较小，不过好在时间比较短。到了浦东机场情况就变成了一个灾难，飞机准时大概两点多到达浦东。然后就用积分预定了5点十分回来的火车，本来想可以不用花钱，不过最后造成了很多蛋疼的事情。到了机场就去取托运的行李，结果就各种等各种不来。等了一个多小时终于姗姗来迟，然后就做地铁从浦东机场到虹桥火车站，结果地铁又排了很长的队。显然火车是赶不上了，然后打算改签，然后发现积分顶的票不能网上改签，只能去现场改签。于是想放弃这张票，买了临近时间的票，结果还时间冲突。无奈只得到了车站再买票，然后坐上火车回到苏州。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这种游记当然是按时间顺序走起，也可以算是个流水账。在考虑到去哪之前，让人纠结了很久。从去日本、巴厘岛、台湾等经过多方选择，最终以可以方便的说汉语这个原因，选择了去台湾。去了之后，发现讲起话来真的舒服了很多，那边的人也都很热情，很不错。另外，那声谢谢的语调真的非常有意思。&lt;/</summary>
      
    
    
    
    
    <category term="日常" scheme="http://code4fun.me/tags/日常/"/>
    
  </entry>
  
  <entry>
    <title>无锁队列</title>
    <link href="http://code4fun.me/2019/05/28/lockfreequeue/"/>
    <id>http://code4fun.me/2019/05/28/lockfreequeue/</id>
    <published>2019-05-28T15:14:37.000Z</published>
    <updated>2025-06-13T10:54:27.289Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2019-05-28 15:14:37</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://code4fun.me&quot;&gt;呼呼呼山&lt;/a&gt;&lt;br&gt;2019-05-28 15:14:37&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    
    <category term="Data Structure" scheme="http://code4fun.me/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>匿名union</title>
    <link href="http://code4fun.me/2019/05/24/anonymous_union/"/>
    <id>http://code4fun.me/2019/05/24/anonymous_union/</id>
    <published>2019-05-24T17:39:03.000Z</published>
    <updated>2025-06-13T10:54:27.236Z</updated>
    
    <content type="html"><![CDATA[<p>references:<br><a href="http://northstar-www.dartmouth.edu/doc/ibmcxx/en_US/doc/language/ref/rucldun.htm" target="_blank" rel="external">union introduction</a></p><blockquote><p><a href="http://code4fun.me">呼呼呼山</a><br>2019-05-24 17:39:03</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;references:&lt;br&gt;&lt;a href=&quot;http://northstar-www.dartmouth.edu/doc/ibmcxx/en_US/doc/language/ref/rucldun.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;</summary>
      
    
    
    
    
    <category term="cpp" scheme="http://code4fun.me/tags/cpp/"/>
    
  </entry>
  
</feed>
